{"version":3,"sources":["i18n.js","config.js","helpers/api/apiCore.js","routes/PrivateRoute.js","routes/Root.js","layouts/Default.js","components/ThemeCustomizer/LayoutTypes.js","components/ThemeCustomizer/LayoutColor.js","components/ThemeCustomizer/LayoutWidth.js","components/ThemeCustomizer/LeftSideBarTheme.js","components/ThemeCustomizer/LeftSideBarType.js","components/ThemeCustomizer/index.js","layouts/Vertical.js","layouts/Detached.js","layouts/Horizontal/index.js","layouts/Full.js","routes/index.js","routes/Routes.js","helpers/fake-backend.js","helpers/api/auth.js","App.js","redux/auth/reducers.js","redux/layout/reducers.js","redux/reducers.js","redux/auth/saga.js","redux/layout/saga.js","redux/sagas.js","redux/store.js","index.js","utils/array.js","utils/layout.js","redux/layout/actions.js","redux/layout/constants.js","redux/auth/actions.js","constants/layout.js","redux/auth/constants.js"],"names":["resources","es","translation","i18n","use","detector","initReactI18next","init","lng","fallbackLng","keySeparator","interpolation","escapeValue","config","API_URL","process","REACT_APP_API_URL","axios","defaults","headers","post","baseURL","interceptors","response","error","message","status","data","Promise","reject","window","location","href","AUTH_SESSION_KEY","setAuthorization","token","common","getUserFromSession","user","sessionStorage","getItem","JSON","parse","APICore","get","url","params","queryString","Object","keys","map","key","join","getFile","responseType","getMultiple","urls","reqs","push","all","create","updatePatch","patch","update","put","delete","createWithFile","formData","FormData","k","append","updateWithFile","isUserAuthenticated","getLoggedInUser","decoded","jwtDecode","currentTime","Date","now","exp","console","warn","setLoggedInUser","session","setItem","stringify","removeItem","setUserInSession","modifiedUser","userInfo","PrivateRoute","RouteComponent","component","roles","useLocation","api","loggedInUser","to","state","from","replace","indexOf","role","pathname","Root","DefaultLayout","props","layoutColor","useSelector","Layout","useEffect","changeBodyAttribute","document","body","classList","add","remove","fallback","className","LayoutTypes","changeLayoutType","layoutType","layoutConstants","Form","Check","Input","type","onChange","e","target","value","name","LAYOUT_VERTICAL","id","checked","Label","htmlFor","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","LAYOUT_FULL","LayoutColor","changeLayoutColorScheme","LAYOUT_COLOR_LIGHT","LAYOUT_COLOR_DARK","LayoutWidth","changeWidthMode","layoutWidth","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LeftSideBarTheme","changeLeftSidebarTheme","leftSideBarTheme","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_LIGHT","LEFT_SIDEBAR_THEME_DARK","LeftSideBarType","changeLeftSiderbarType","leftSideBarType","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","ThemeCustomizer","dispatch","useDispatch","useState","disableLayoutWidth","setDisableLayoutWidth","disableSidebarTheme","setDisableSidebarTheme","disableSidebarType","setDisableSidebarType","_loadStateFromProps","useCallback","changeLayout","changeLayoutColor","changeLayoutWidth","changeSidebarTheme","changeSidebarType","Fragment","onClick","Topbar","React","lazy","LeftSidebar","Footer","RightSidebar","loading","VerticalLayout","children","isMenuOpened","setIsMenuOpened","updateDimensions","innerWidth","addEventListener","removeEventListener","isCondensed","isLight","hideUserProfile","openLeftMenuCallBack","prevState","hideLogo","Container","fluid","DetachedLayout","showRightSidebar","navCssClasses","topbarDark","Navbar","HorizontalLayout","FullLayout","Login","Logout","Register","Confirm","ForgetPassword","LockScreen","Login2","Logout2","Register2","Confirm2","ForgetPassword2","LockScreen2","AnalyticsDashboard","EcommerceDashboard","ProjectDashboard","EWalletDashboard","CalendarApp","Projects","ProjectDetail","ProjectGannt","ProjectForm","ChatApp","CRMDashboard","CRMProjects","CRMManagement","CRMClients","CRMOrderList","EcommerceProducts","ProductDetails","Orders","OrderDetails","Customers","Cart","Checkout","Sellers","Inbox","EmailDetail","SocialFeed","TaskList","TaskDetails","Kanban","FileManager","Profile","Profile2","ErrorPageNotFound","ErrorPageNotFoundAlt","ServerError","Invoice","FAQ","Pricing","Maintenance","Starter","PreLoader","Timeline","Landing","Accordions","Alerts","Avatars","Badges","Breadcrumbs","Buttons","Cards","Carousels","Dropdowns","EmbedVideo","Grid","ListGroups","Modals","Notifications","Offcanvases","Paginations","Popovers","Progress","Ribbons","Spinners","Tabs","Tooltips","Typography","DragDrop","RangeSliders","Ratings","Dripicons","MDIIcons","Unicons","BasicForms","FormAdvanced","FormValidation","FormWizard","FileUpload","Editors","ApexChart","BriteChart","ChartJs","BasicTables","AdvancedTables","Widgets","GoogleMaps","VectorMaps","LoadComponent","Component","AllRoutes","layout","layoutCls","getLayout","useRoutes","path","element","Default","Routes","TOKEN","mock","MockAdapter","onNoMatch","login","logout","signup","forgotPassword","forgotPasswordConfirm","users","username","password","firstName","lastName","onPost","reply","resolve","setTimeout","filteredUsers","filter","length","fullname","split","newUser","configureFakeBackend","App","INIT_STATE","Auth","action","log","AuthActionTypes","API_RESPONSE_SUCCESS","payload","actionType","LOGIN_USER","userLoggedIn","SIGNUP_USER","userSignUp","LOGOUT_USER","userLogout","FORGOT_PASSWORD","resetPasswordSuccess","passwordReset","FORGOT_PASSWORD_CHANGE","passwordChange","API_RESPONSE_ERROR","registerError","RESET","LayoutActionTypes","CHANGE_LAYOUT","CHANGE_LAYOUT_COLOR","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","combineReducers","forgotPasswordChange","watchLoginUser","watchLogout","watchSignup","watchForgotPassword","watchForgotPasswordChange","authSaga","call","loginApi","authApiResponseSuccess","authApiResponseError","logoutApi","email","signupApi","forgotPasswordApi","takeEvery","fork","hideRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","manageBodyClass","cssClass","toggle","rootSaga","layoutSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","render","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","configureStore","getElementById","groupByFields","array","f","groups","forEach","o","group","attribute","setAttribute","color","width","theme","sidebarType","TOGGLE_RIGHT_SIDEBAR","loginUser","logoutUser","signupUser","resetAuth"],"mappings":"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","file":"static/js/main.d687f4f0.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport detector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nimport translationEs from './locales/es/translation.json';\n//translations\nconst resources = {\n    es: {\n        translation: translationEs,\n    },\n};\n\ni18n.use(detector)\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        lng: 'en',\n        fallbackLng: 'en', // use en if detected lng is not available\n\n        keySeparator: false, // we do not use keys in form messages.welcome\n\n        interpolation: {\n            escapeValue: false, // react already safes from xss\n        },\n    });\n\nexport default i18n;\n","const config = {\n    API_URL: process.env.REACT_APP_API_URL,\n};\n\nexport default config;\n","import jwtDecode from 'jwt-decode';\nimport axios from 'axios';\n\nimport config from '../../config';\n\n// content type\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.baseURL = config.API_URL;\n\n// intercepting to capture errors\naxios.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        let message;\n\n        if (error && error.response && error.response.status === 404) {\n            // window.location.href = '/not-found';\n        } else if (error && error.response && error.response.status === 403) {\n            window.location.href = '/access-denied';\n        } else {\n            switch (error.response.status) {\n                case 401:\n                    message = 'Invalid credentials';\n                    break;\n                case 403:\n                    message = 'Access Forbidden';\n                    break;\n                case 404:\n                    message = 'Sorry! the data you are looking for could not be found';\n                    break;\n                default: {\n                    message =\n                        error.response && error.response.data ? error.response.data['message'] : error.message || error;\n                }\n            }\n            return Promise.reject(message);\n        }\n    }\n);\n\nconst AUTH_SESSION_KEY = 'hyper_user';\n\n/**\n * Sets the default authorization\n * @param {*} token\n */\nconst setAuthorization = (token) => {\n    if (token) axios.defaults.headers.common['Authorization'] = 'JWT ' + token;\n    else delete axios.defaults.headers.common['Authorization'];\n};\n\nconst getUserFromSession = () => {\n    const user = sessionStorage.getItem(AUTH_SESSION_KEY);\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\n};\nclass APICore {\n    /**\n     * Fetches data from given url\n     */\n    get = (url, params) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                      .map((key) => key + '=' + params[key])\n                      .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, params);\n        } else {\n            response = axios.get(`${url}`, params);\n        }\n        return response;\n    };\n\n    getFile = (url, params) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                      .map((key) => key + '=' + params[key])\n                      .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, { responseType: 'blob' });\n        } else {\n            response = axios.get(`${url}`, { responseType: 'blob' });\n        }\n        return response;\n    };\n\n    getMultiple = (urls, params) => {\n        const reqs = [];\n        let queryString = '';\n        if (params) {\n            queryString = params\n                ? Object.keys(params)\n                      .map((key) => key + '=' + params[key])\n                      .join('&')\n                : '';\n        }\n\n        for (const url of urls) {\n            reqs.push(axios.get(`${url}?${queryString}`));\n        }\n        return axios.all(reqs);\n    };\n\n    /**\n     * post given data to url\n     */\n    create = (url, data) => {\n        return axios.post(url, data);\n    };\n\n    /**\n     * Updates patch data\n     */\n    updatePatch = (url, data) => {\n        return axios.patch(url, data);\n    };\n\n    /**\n     * Updates data\n     */\n    update = (url, data) => {\n        return axios.put(url, data);\n    };\n\n    /**\n     * Deletes data\n     */\n    delete = (url) => {\n        return axios.delete(url);\n    };\n\n    /**\n     * post given data to url with file\n     */\n    createWithFile = (url, data) => {\n        const formData = new FormData();\n        for (const k in data) {\n            formData.append(k, data[k]);\n        }\n\n        const config = {\n            headers: {\n                ...axios.defaults.headers,\n                'content-type': 'multipart/form-data',\n            },\n        };\n        return axios.post(url, formData, config);\n    };\n\n    /**\n     * post given data to url with file\n     */\n    updateWithFile = (url, data) => {\n        const formData = new FormData();\n        for (const k in data) {\n            formData.append(k, data[k]);\n        }\n\n        const config = {\n            headers: {\n                ...axios.defaults.headers,\n                'content-type': 'multipart/form-data',\n            },\n        };\n        return axios.patch(url, formData, config);\n    };\n\n    isUserAuthenticated = () => {\n        const user = this.getLoggedInUser();\n        if (!user || (user && !user.token)) {\n            return false;\n        }\n        const decoded = jwtDecode(user.token);\n        const currentTime = Date.now() / 1000;\n        if (decoded.exp < currentTime) {\n            console.warn('access token expired');\n            return false;\n        } else {\n            return true;\n        }\n    };\n\n    setLoggedInUser = (session) => {\n        if (session) sessionStorage.setItem(AUTH_SESSION_KEY, JSON.stringify(session));\n        else {\n            sessionStorage.removeItem(AUTH_SESSION_KEY);\n        }\n    };\n\n    /**\n     * Returns the logged in user\n     */\n    getLoggedInUser = () => {\n        return getUserFromSession();\n    };\n\n    setUserInSession = (modifiedUser) => {\n        let userInfo = sessionStorage.getItem(AUTH_SESSION_KEY);\n        if (userInfo) {\n            const { token, user } = JSON.parse(userInfo);\n            this.setLoggedInUser({ token, ...user, ...modifiedUser });\n        }\n    };\n}\n\n/*\nCheck if token available in session\n*/\nlet user = getUserFromSession();\nif (user) {\n    const { token } = user;\n    if (token) {\n        setAuthorization(token);\n    }\n}\n\nexport { APICore, setAuthorization };\n","import { Navigate, useLocation } from 'react-router-dom';\nimport { APICore } from '../helpers/api/apiCore';\n\ntype PrivateRouteProps = {\n    component: React.ComponentType,\n    roles?: string,\n};\n\n/**\n * Private Route forces the authorization before the route can be accessed\n * @param {*} param0\n * @returns\n */\nconst PrivateRoute = ({ component: RouteComponent, roles, ...rest }: PrivateRouteProps) => {\n    let location = useLocation();\n    const api = new APICore();\n    const loggedInUser = api.getLoggedInUser();\n\n    /**\n     * not logged in so redirect to login page with the return url\n     */\n    if (api.isUserAuthenticated() === false) {\n        return <Navigate to={'/account/login'} state={{ from: location }} replace />;\n    }\n\n    // check if route is restricted by role\n    if (roles && roles.indexOf(loggedInUser.role) === -1) {\n        // role not authorised so redirect to home page\n        return <Navigate to={{ pathname: '/' }} />;\n    }\n\n    return <RouteComponent />;\n};\n\nexport default PrivateRoute;\n","import { Navigate } from 'react-router-dom';\n\nconst Root = () => {\n    const getRootUrl = () => {\n        let url = 'pages/starter';\n        return url;\n    };\n\n    const url = getRootUrl();\n\n    return <Navigate to={`/${url}`} />;\n};\n\nexport default Root;\n","// @flow\nimport React, { useEffect, Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\n\n// utils\nimport { changeBodyAttribute } from '../utils';\n\nconst loading = () => <div className=\"\"></div>;\n\ntype DefaultLayoutProps = {};\n\nconst DefaultLayout = (props: DefaultLayoutProps): React$Element<any> => {\n    const { layoutColor } = useSelector((state) => ({\n        layoutColor: state.Layout.layoutColor,\n    }));\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-color', layoutColor);\n    }, [layoutColor]);\n\n    useEffect(() => {\n        if (document.body) document.body.classList.add('authentication-bg');\n\n        return () => {\n            if (document.body) document.body.classList.remove('authentication-bg');\n        };\n    }, []);\n\n    return (\n        <Suspense fallback={loading()}>\n            <Outlet />\n        </Suspense>\n    );\n};\nexport default DefaultLayout;\n","// @flow\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport * as layoutConstants from '../../constants/layout';\n\ntype LayoutTypesProps = {\n    changeLayoutType: (value: any) => void,\n    layoutType: string,\n    layoutConstants: typeof layoutConstants,\n};\n\nconst LayoutTypes = ({\n    changeLayoutType,\n    layoutType,\n    layoutConstants,\n}: LayoutTypesProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <h5 className=\"mt-3\">Layout</h5>\n\n            <hr className=\"mt-1\" />\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    onChange={(e) => changeLayoutType(e.target.value)}\n                    name=\"layout-type\"\n                    value={layoutConstants.LAYOUT_VERTICAL}\n                    id=\"vertical-layout\"\n                    checked={layoutType === layoutConstants.LAYOUT_VERTICAL}\n                />\n                <Form.Check.Label htmlFor=\"vertical-layout\">Vertical Layout</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    onChange={(e) => changeLayoutType(e.target.value)}\n                    name=\"layout-type\"\n                    value={layoutConstants.LAYOUT_HORIZONTAL}\n                    id=\"horizontal-layout\"\n                    checked={layoutType === layoutConstants.LAYOUT_HORIZONTAL}\n                />\n                <Form.Check.Label htmlFor=\"horizontal-layout\">Horizontal Layout</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    onChange={(e) => changeLayoutType(e.target.value)}\n                    name=\"layout-type\"\n                    value={layoutConstants.LAYOUT_DETACHED}\n                    id=\"detached-layout\"\n                    checked={layoutType === layoutConstants.LAYOUT_DETACHED}\n                />\n                <Form.Check.Label htmlFor=\"detached-layout\">Detached Layout</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    onChange={(e) => changeLayoutType(e.target.value)}\n                    name=\"layout-type\"\n                    value={layoutConstants.LAYOUT_FULL}\n                    id=\"full-mode-layout\"\n                    checked={layoutType === layoutConstants.LAYOUT_FULL}\n                />\n                <Form.Check.Label htmlFor=\"full-mode-layout\">Full Layout</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default LayoutTypes;\n","// @flow\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\n\n// constants\nimport * as layoutConstants from '../../constants/layout';\n\ntype LayoutColorProps = {\n    changeLayoutColorScheme: (value: any) => void,\n    layoutColor: string,\n    layoutConstants: typeof layoutConstants,\n};\n\nconst LayoutColor = ({\n    changeLayoutColorScheme,\n    layoutColor,\n    layoutConstants,\n}: LayoutColorProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <h5 className=\"mt-4\">Color Scheme</h5>\n\n            <hr className=\"mt-1\" />\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    onChange={(e) => changeLayoutColorScheme(e.target.value)}\n                    name=\"layout-color\"\n                    value={layoutConstants.LAYOUT_COLOR_LIGHT}\n                    id=\"light-mode\"\n                    checked={layoutColor === layoutConstants.LAYOUT_COLOR_LIGHT}\n                />\n                <Form.Check.Label htmlFor=\"vertical-layout\">Light Mode</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    onChange={(e) => changeLayoutColorScheme(e.target.value)}\n                    name=\"layout-color\"\n                    value={layoutConstants.LAYOUT_COLOR_DARK}\n                    id=\"dark-mode\"\n                    checked={layoutColor === layoutConstants.LAYOUT_COLOR_DARK}\n                />\n                <Form.Check.Label htmlFor=\"horizontal-layout\">Dark Mode</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default LayoutColor;\n","// @flow\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport * as layoutConstants from '../../constants/layout';\n\ninterface LayoutWidthProps {\n    changeWidthMode: (value: any) => void;\n    layoutWidth: string;\n    layoutConstants: typeof layoutConstants.LayoutWidth;\n}\n\nconst LayoutWidth = ({\n    changeWidthMode,\n    layoutWidth,\n    layoutConstants,\n}: LayoutWidthProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <h5 className=\"mt-4\">Width</h5>\n\n            <hr className=\"mt-1\" />\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"width\"\n                    id=\"fluid-check\"\n                    value={layoutConstants.LAYOUT_WIDTH_FLUID}\n                    onChange={(e) => changeWidthMode(e.target.value)}\n                    checked={layoutWidth === layoutConstants.LAYOUT_WIDTH_FLUID}\n                />\n                <Form.Check.Label htmlFor=\"fluid-check\">Fluid</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"width\"\n                    id=\"boxed-check\"\n                    value={layoutConstants.LAYOUT_WIDTH_BOXED}\n                    onChange={(e) => changeWidthMode(e.target.value)}\n                    checked={layoutWidth === layoutConstants.LAYOUT_WIDTH_BOXED}\n                />\n                <Form.Check.Label htmlFor=\"boxed-check\">Boxed</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default LayoutWidth;\n","// @flow\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport * as layoutConstants from '../../constants/layout';\n\ninterface LeftSideBarThemeProps {\n    changeLeftSidebarTheme: (value: any) => void;\n    leftSideBarTheme: string;\n    layoutConstants: typeof layoutConstants.SideBarTheme;\n}\n\nconst LeftSideBarTheme = ({\n    changeLeftSidebarTheme,\n    leftSideBarTheme,\n    layoutConstants,\n}: LeftSideBarThemeProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <h5 className=\"mt-4\">Left Sidebar Color</h5>\n            <hr className=\"mt-1\" />\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"theme\"\n                    id=\"brand-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT}\n                    onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n                    checked={leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT}\n                />\n                <Form.Check.Label htmlFor=\"brand-check\">Default</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"theme\"\n                    id=\"light-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_THEME_LIGHT}\n                    onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n                    checked={leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_LIGHT}\n                />\n                <Form.Check.Label htmlFor=\"light-check\">Light</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"theme\"\n                    id=\"dark-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_THEME_DARK}\n                    onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n                    checked={leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_DARK}\n                />\n                <Form.Check.Label htmlFor=\"dark-check\">Dark</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default LeftSideBarTheme;\n","// @flow\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport * as layoutConstants from '../../constants/layout';\n\ninterface LeftSideBarTypeProps {\n    changeLeftSiderbarType: (value: any) => void;\n    leftSideBarType: string;\n    layoutConstants: typeof layoutConstants.SideBarTypes;\n}\n\nconst LeftSideBarType = ({\n    changeLeftSiderbarType,\n    leftSideBarType,\n    layoutConstants,\n}: LeftSideBarTypeProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <Form.Check className=\"form-check form-switch mb-1 mt-3\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"leftsidebar-size\"\n                    id=\"default-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_TYPE_FIXED}\n                    onChange={(e) => changeLeftSiderbarType(e.target.value)}\n                    checked={leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_FIXED}\n                />\n                <Form.Check.Label htmlFor=\"default-check\">Fixed</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"leftsidebar-size\"\n                    id=\"condensed-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED}\n                    onChange={(e) => changeLeftSiderbarType(e.target.value)}\n                    checked={leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED}\n                />\n                <Form.Check.Label htmlFor=\"condensed-check\">Condensed</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"leftsidebar-size\"\n                    id=\"compact-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE}\n                    onChange={(e) => changeLeftSiderbarType(e.target.value)}\n                    checked={leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE}\n                />\n                <Form.Check.Label htmlFor=\"compact-check\">Scrollable</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default LeftSideBarType;\n","// @flow\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n// actions\nimport {\n    changeLayout,\n    changeLayoutColor,\n    changeLayoutWidth,\n    changeSidebarTheme,\n    changeSidebarType,\n} from '../../redux/actions';\n\n// constants\nimport * as layoutConstants from '../../constants/layout';\n\n// components\nimport LayoutTypes from './LayoutTypes';\nimport LayoutColor from './LayoutColor';\nimport LayoutWidth from './LayoutWidth';\nimport LeftSideBarTheme from './LeftSideBarTheme';\nimport LeftSideBarType from './LeftSideBarType';\n\nconst ThemeCustomizer = (): React$Element<React$FragmentType> => {\n    const dispatch = useDispatch();\n\n    const { layoutColor, layoutType, layoutWidth, leftSideBarType, leftSideBarTheme } = useSelector((state) => ({\n        layoutColor: state.Layout.layoutColor,\n        layoutType: state.Layout.layoutType,\n        layoutWidth: state.Layout.layoutWidth,\n        leftSideBarTheme: state.Layout.leftSideBarTheme,\n        leftSideBarType: state.Layout.leftSideBarType,\n    }));\n\n    const [disableLayoutWidth, setDisableLayoutWidth] = useState(false);\n    const [disableSidebarTheme, setDisableSidebarTheme] = useState(false);\n    const [disableSidebarType, setDisableSidebarType] = useState(false);\n\n    /**\n     * change state based on props changes\n     */\n    const _loadStateFromProps = useCallback(() => {\n        setDisableLayoutWidth(\n            layoutType !== layoutConstants.LAYOUT_DETACHED && layoutType !== layoutConstants.LAYOUT_FULL\n        );\n\n        setDisableSidebarTheme(\n            layoutType !== layoutConstants.LAYOUT_HORIZONTAL && layoutType !== layoutConstants.LAYOUT_DETACHED\n        );\n        setDisableSidebarType(layoutType !== layoutConstants.LAYOUT_HORIZONTAL);\n    }, [layoutType]);\n\n    useEffect(() => {\n        _loadStateFromProps();\n    }, [_loadStateFromProps]);\n\n    /**\n     * On layout change\n     */\n    const changeLayoutType = (value: any) => {\n        var layout = value;\n        switch (layout) {\n            case 'topnav':\n                dispatch(changeLayout(layoutConstants.LAYOUT_HORIZONTAL));\n                break;\n            case 'detached':\n                dispatch(changeLayout(layoutConstants.LAYOUT_DETACHED));\n                break;\n            case 'full':\n                dispatch(changeLayout(layoutConstants.LAYOUT_FULL));\n                break;\n            default:\n                dispatch(changeLayout(layoutConstants.LAYOUT_VERTICAL));\n                break;\n        }\n    };\n\n    /**\n     * Change the layout color\n     */\n    const changeLayoutColorScheme = (value: any) => {\n        var mode = value;\n        switch (mode) {\n            case 'dark':\n                dispatch(changeLayoutColor(layoutConstants.LAYOUT_COLOR_DARK));\n                break;\n            default:\n                dispatch(changeLayoutColor(layoutConstants.LAYOUT_COLOR_LIGHT));\n                break;\n        }\n    };\n\n    /**\n     * Change the width mode\n     */\n    const changeWidthMode = (value: any) => {\n        var mode = value;\n\n        switch (mode) {\n            case 'boxed':\n                dispatch(changeLayoutWidth(layoutConstants.LAYOUT_WIDTH_BOXED));\n                break;\n            default:\n                dispatch(changeLayoutWidth(layoutConstants.LAYOUT_WIDTH_FLUID));\n                break;\n        }\n    };\n\n    /**\n     * Changes the theme\n     */\n    const changeLeftSidebarTheme = (value: any) => {\n        var theme = value;\n        switch (theme) {\n            case 'default':\n                dispatch(changeSidebarTheme(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\n                break;\n            case 'light':\n                dispatch(changeSidebarTheme(layoutConstants.LEFT_SIDEBAR_THEME_LIGHT));\n                break;\n            default:\n                dispatch(changeSidebarTheme(layoutConstants.LEFT_SIDEBAR_THEME_DARK));\n                break;\n        }\n    };\n\n    /**\n     * Change the leftsiderbar type\n     */\n    const changeLeftSiderbarType = (value: any) => {\n        var type = value;\n        switch (type) {\n            case 'condensed':\n                dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED));\n                break;\n            case 'scrollable':\n                dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE));\n                break;\n            default:\n                dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\n                break;\n        }\n    };\n\n    /**\n     * Reset everything\n     */\n    const reset = () => {\n        changeLayoutType(layoutConstants.LAYOUT_VERTICAL);\n        changeLayoutColorScheme(layoutConstants.LAYOUT_COLOR_LIGHT);\n        changeWidthMode(layoutConstants.LAYOUT_WIDTH_FLUID);\n        changeLeftSidebarTheme(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT);\n        changeLeftSiderbarType(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED);\n    };\n\n    return (\n        <React.Fragment>\n            <div className=\"p-3\">\n                <div className=\"alert alert-warning\" role=\"alert\">\n                    <strong>Customize </strong> the overall color scheme, sidebar menu, etc.\n                </div>\n\n                {/* Layouts */}\n                <LayoutTypes\n                    changeLayoutType={changeLayoutType}\n                    layoutType={layoutType}\n                    layoutConstants={layoutConstants}\n                />\n\n                {/* color scheme */}\n                <LayoutColor\n                    changeLayoutColorScheme={changeLayoutColorScheme}\n                    layoutColor={layoutColor}\n                    layoutConstants={layoutConstants}\n                />\n\n                {/* Width */}\n                {disableLayoutWidth && (\n                    <LayoutWidth\n                        changeWidthMode={changeWidthMode}\n                        layoutWidth={layoutWidth}\n                        layoutConstants={layoutConstants}\n                    />\n                )}\n\n                {/* Left Sidebar */}\n                {disableSidebarTheme && (\n                    <LeftSideBarTheme\n                        changeLeftSidebarTheme={changeLeftSidebarTheme}\n                        leftSideBarTheme={leftSideBarTheme}\n                        layoutConstants={layoutConstants}\n                    />\n                )}\n\n                {/* Left Sidebar Size */}\n                {disableSidebarType && (\n                    <LeftSideBarType\n                        changeLeftSiderbarType={changeLeftSiderbarType}\n                        leftSideBarType={leftSideBarType}\n                        layoutConstants={layoutConstants}\n                    />\n                )}\n\n                <div className=\"d-grid mt-4\">\n                    <button className=\"btn btn-primary\" id=\"resetBtn\" onClick={() => reset()}>\n                        Reset to Default\n                    </button>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default ThemeCustomizer;\n","// @flow\nimport React, { Suspense, useCallback, useEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container } from 'react-bootstrap';\n\n// actions\nimport { changeSidebarType } from '../redux/actions';\n\n// constants\nimport * as layoutConstants from '../constants/layout';\n\n// components\nimport ThemeCustomizer from '../components/ThemeCustomizer/';\n\n// utils\nimport { changeBodyAttribute } from '../utils';\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst Topbar = React.lazy(() => import('./Topbar'));\nconst LeftSidebar = React.lazy(() => import('./LeftSidebar'));\nconst Footer = React.lazy(() => import('./Footer'));\nconst RightSidebar = React.lazy(() => import('./RightSidebar'));\n\nconst loading = () => <div className=\"\"></div>;\n\ntype VerticalLayoutProps = {\n    children?: any,\n};\n\ntype VerticalLayoutState = {\n    isMenuOpened?: boolean,\n};\n\nconst VerticalLayout = ({ children }: VerticalLayoutProps, state: VerticalLayoutState): React$Element<any> => {\n    const dispatch = useDispatch();\n\n    const { layoutColor, leftSideBarTheme, leftSideBarType, layoutWidth } = useSelector((state) => ({\n        layoutColor: state.Layout.layoutColor,\n        layoutWidth: state.Layout.layoutWidth,\n        leftSideBarTheme: state.Layout.leftSideBarTheme,\n        leftSideBarType: state.Layout.leftSideBarType,\n    }));\n\n    const [isMenuOpened, setIsMenuOpened] = useState(false);\n\n    /*\n     * layout defaults\n     */\n    useEffect(() => {\n        changeBodyAttribute('data-layout', layoutConstants.LAYOUT_VERTICAL);\n    }, []);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-color', layoutColor);\n    }, [layoutColor]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-mode', layoutWidth);\n    }, [layoutWidth]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-leftbar-theme', leftSideBarTheme);\n    }, [leftSideBarTheme]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-leftbar-compact-mode', leftSideBarType);\n    }, [leftSideBarType]);\n\n    /**\n     * Open the menu when having mobile screen\n     */\n    const openMenu = () => {\n        setIsMenuOpened((prevState) => {\n            setIsMenuOpened(!prevState);\n        });\n\n        if (document.body) {\n            if (isMenuOpened) {\n                document.body.classList.remove('sidebar-enable');\n            } else {\n                document.body.classList.add('sidebar-enable');\n            }\n        }\n    };\n\n    const updateDimensions = useCallback(() => {\n        // activate the condensed sidebar if smaller devices like ipad or tablet\n        if (window.innerWidth >= 768 && window.innerWidth <= 1028) {\n            dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED));\n        } else if (window.innerWidth > 1028) {\n            dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\n        }\n    }, [dispatch]);\n\n    useEffect(() => {\n        window.addEventListener('resize', updateDimensions);\n\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n        };\n    }, [dispatch, updateDimensions]);\n\n    const isCondensed = leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED;\n    const isLight = leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_LIGHT;\n\n    return (\n        <>\n            <div className=\"wrapper\">\n                <Suspense fallback={loading()}>\n                    <LeftSidebar isCondensed={isCondensed} isLight={isLight} hideUserProfile={true} />\n                </Suspense>\n                <div className=\"content-page\">\n                    <div className=\"content\">\n                        <Suspense fallback={loading()}>\n                            <Topbar openLeftMenuCallBack={openMenu} hideLogo={true} />\n                        </Suspense>\n                        <Container fluid>\n                            <Outlet />\n                        </Container>\n                    </div>\n\n                    <Suspense fallback={loading()}>\n                        <Footer />\n                    </Suspense>\n                </div>\n            </div>\n\n            <Suspense fallback={loading()}>\n                <RightSidebar>\n                    <ThemeCustomizer />\n                </RightSidebar>\n            </Suspense>\n        </>\n    );\n};\nexport default VerticalLayout;\n","// @flow\nimport React, { Suspense, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container } from 'react-bootstrap';\nimport { Outlet } from 'react-router-dom';\n\n// actions\nimport { changeSidebarType } from '../redux/actions';\n\n// constants\nimport * as layoutConstants from '../constants/layout';\n\n// components\nimport ThemeCustomizer from '../components/ThemeCustomizer/';\n\n// utils\nimport { changeBodyAttribute } from '../utils/';\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst Topbar = React.lazy(() => import('./Topbar'));\nconst LeftSidebar = React.lazy(() => import('./LeftSidebar'));\nconst Footer = React.lazy(() => import('./Footer'));\nconst RightSidebar = React.lazy(() => import('./RightSidebar'));\n\nconst loading = () => <div className=\"text-center\"></div>;\n\ntype VerticalLayoutProps = {\n    children?: any,\n};\n\ntype VerticalLayoutState = {\n    isMenuOpened?: boolean,\n};\n\nconst DetachedLayout = ({ children }: VerticalLayoutProps, state: VerticalLayoutState): React$Element<any> => {\n    const dispatch = useDispatch();\n    const { layoutColor, leftSideBarTheme, leftSideBarType, showRightSidebar } = useSelector((state) => ({\n        layoutColor: state.Layout.layoutColor,\n        layoutWidth: state.Layout.layoutWidth,\n        leftSideBarTheme: state.Layout.leftSideBarTheme,\n        leftSideBarType: state.Layout.leftSideBarType,\n        showRightSidebar: state.Layout.showRightSidebar,\n    }));\n\n    const [isMenuOpened, setIsMenuOpened] = useState(false);\n\n    /*\n     * layout defaults\n     */\n    useEffect(() => {\n        changeBodyAttribute('data-layout', layoutConstants.LAYOUT_DETACHED);\n        changeBodyAttribute('data-layout-mode', layoutConstants.LAYOUT_WIDTH_FLUID);\n        changeBodyAttribute('data-leftbar-theme', layoutConstants.LEFT_SIDEBAR_THEME_DARK);\n    }, []);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-color', layoutColor);\n    }, [layoutColor]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-leftbar-compact-mode', leftSideBarType);\n    }, [leftSideBarType]);\n\n    /**\n     * Open the menu when having mobile screen\n     */\n    const openMenu = (e) => {\n        setIsMenuOpened((prevState) => {\n            setIsMenuOpened(!prevState);\n        });\n        if (document.body) {\n            if (isMenuOpened) {\n                document.body.classList.add('sidebar-enable');\n            } else {\n                document.body.classList.remove('sidebar-enable');\n            }\n        }\n    };\n\n    const updateDimensions = useCallback(() => {\n        // activate the condensed sidebar if smaller devices like ipad or tablet\n        if (window.innerWidth >= 768 && window.innerWidth <= 1028) {\n            dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED));\n        } else if (window.innerWidth > 1028) {\n            dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\n        }\n    }, [dispatch]);\n\n    useEffect(() => {\n        window.addEventListener('resize', updateDimensions);\n\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n        };\n    }, [dispatch, updateDimensions]);\n\n    const isCondensed = leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED;\n    const isLight = leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_LIGHT;\n\n    return (\n        <>\n            <Suspense fallback={loading()}>\n                <Topbar\n                    isMenuOpened={isMenuOpened}\n                    openLeftMenuCallBack={openMenu}\n                    navCssClasses=\"topnav-navbar topnav-navbar-dark\"\n                    topbarDark={true}\n                />\n            </Suspense>\n            <Container fluid>\n                <div className=\"wrapper\">\n                    <Suspense fallback={loading()}>\n                        <LeftSidebar\n                            isMenuOpened={isMenuOpened}\n                            isCondensed={isCondensed}\n                            isLight={isLight}\n                            hideLogo={true}\n                            hideUserProfile={false}\n                        />\n                    </Suspense>\n\n                    <div className=\"content-page\">\n                        <div className=\"content\">\n                            <Outlet />\n                        </div>\n\n                        <Suspense fallback={loading()}>\n                            <Footer />\n                        </Suspense>\n                    </div>\n                </div>\n            </Container>\n            {showRightSidebar && (\n                <Suspense fallback={loading()}>\n                    <RightSidebar>\n                        <ThemeCustomizer />\n                    </RightSidebar>\n                </Suspense>\n            )}\n        </>\n    );\n};\n\nexport default DetachedLayout;\n","// @flow\nimport React, { Suspense, useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\n\n// constants\nimport * as layoutConstants from '../../constants/layout';\n\n// utils\nimport { changeBodyAttribute } from '../../utils';\n\n// components\nimport ThemeCustomizer from '../../components/ThemeCustomizer/';\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst Topbar = React.lazy(() => import('../Topbar'));\nconst Navbar = React.lazy(() => import('./Navbar'));\nconst Footer = React.lazy(() => import('../Footer'));\nconst RightSidebar = React.lazy(() => import('../RightSidebar'));\n\nconst loading = () => <div className=\"text-center\"></div>;\n\ntype HorizontalLayoutProps = {\n    children?: any,\n};\n\ntype HorizontalLayoutState = {\n    isMenuOpened: boolean,\n};\n\nconst HorizontalLayout = ({ children }: HorizontalLayoutProps, state: HorizontalLayoutState): React$Element<any> => {\n    const [isMenuOpened, setIsMenuOpened] = useState(false);\n\n    const { layoutColor, showRightSidebar, layoutWidth } = useSelector((state) => ({\n        layoutColor: state.Layout.layoutColor,\n        layoutWidth: state.Layout.layoutWidth,\n        showRightSidebar: state.Layout.showRightSidebar,\n    }));\n\n    /**\n     * Open the menu when having mobile screen\n     */\n    const openMenu = () => {\n        setIsMenuOpened(!isMenuOpened);\n        if (document.body) {\n            if (isMenuOpened) {\n                document.body.classList.remove('sidebar-enable');\n            } else {\n                document.body.classList.add('sidebar-enable');\n            }\n        }\n    };\n\n    /*\n     * layout defaults\n     */\n    useEffect(() => {\n        changeBodyAttribute('data-layout', layoutConstants.LAYOUT_HORIZONTAL);\n        changeBodyAttribute('data-leftbar-theme', layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT);\n        changeBodyAttribute('data-leftbar-compact-mode', layoutConstants.LEFT_SIDEBAR_TYPE_FIXED);\n    }, []);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-color', layoutColor);\n    }, [layoutColor]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-mode', layoutWidth);\n    }, [layoutWidth]);\n\n    return (\n        <>\n            <div className=\"wrapper\">\n                <div className=\"content-page\">\n                    <div className=\"content\">\n                        <Suspense fallback={loading()}>\n                            <Topbar\n                                isMenuOpened={isMenuOpened}\n                                openLeftMenuCallBack={openMenu}\n                                navCssClasses=\"topnav-navbar topnav-navbar-dark\"\n                                topbarDark={true}\n                            />\n                        </Suspense>\n\n                        <Suspense fallback={loading()}>\n                            <Navbar isMenuOpened={isMenuOpened} />\n                        </Suspense>\n\n                        <Container fluid>\n                            <Outlet />\n                        </Container>\n                    </div>\n\n                    <Suspense fallback={loading()}>\n                        <Footer />\n                    </Suspense>\n\n                    {showRightSidebar && (\n                        <Suspense fallback={loading()}>\n                            <RightSidebar>\n                                <ThemeCustomizer />\n                            </RightSidebar>\n                        </Suspense>\n                    )}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default HorizontalLayout;\n","// @flow\nimport React, { Suspense, useCallback, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container } from 'react-bootstrap';\nimport { Outlet } from 'react-router-dom';\n\n// actions\nimport { changeSidebarType } from '../redux/actions';\n\n// constants\nimport * as layoutConstants from '../constants/layout';\n\n// components\nimport ThemeCustomizer from '../components/ThemeCustomizer/';\n\n// utils\nimport { changeBodyAttribute } from '../utils';\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst Topbar = React.lazy(() => import('./Topbar'));\nconst LeftSidebar = React.lazy(() => import('./LeftSidebar'));\nconst Footer = React.lazy(() => import('./Footer'));\nconst RightSidebar = React.lazy(() => import('./RightSidebar'));\n\nconst loading = () => <div className=\"\"></div>;\n\ntype VerticalLayoutProps = {\n    children?: any,\n};\n\ntype VerticalLayoutState = {\n    isMenuOpened?: boolean,\n};\n\nconst FullLayout = ({ children }: VerticalLayoutProps, state: VerticalLayoutState): React$Element<any> => {\n    const dispatch = useDispatch();\n\n    const { layoutColor, leftSideBarTheme, leftSideBarType, layoutWidth } = useSelector((state) => ({\n        layoutColor: state.Layout.layoutColor,\n        layoutWidth: state.Layout.layoutWidth,\n        leftSideBarTheme: state.Layout.leftSideBarTheme,\n        leftSideBarType: state.Layout.leftSideBarType,\n    }));\n\n    const [isMenuOpened, setIsMenuOpened] = useState(false);\n\n    useEffect(() => {\n        if (document.body) document.body.classList.add('hide-menu');\n        return () => {\n            if (document.body) document.body.classList.remove('hide-menu');\n        };\n    }, []);\n\n    /*\n     * layout defaults\n     */\n    useEffect(() => {\n        changeBodyAttribute('data-layout', layoutConstants.LAYOUT_FULL);\n    }, []);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-color', layoutColor);\n    }, [layoutColor]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-mode', layoutWidth);\n    }, [layoutWidth]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-leftbar-theme', leftSideBarTheme);\n    }, [leftSideBarTheme]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-leftbar-compact-mode', leftSideBarType);\n    }, [leftSideBarType]);\n\n    /**\n     * Open the menu when having mobile screen\n     */\n    const openMenu = () => {\n        setIsMenuOpened((prevState) => {\n            setIsMenuOpened(!prevState);\n        });\n\n        if (document.body) {\n            if (isMenuOpened) {\n                document.body.classList.remove('sidebar-enable');\n            } else {\n                document.body.classList.add('sidebar-enable');\n            }\n        }\n    };\n\n    const updateDimensions = useCallback(() => {\n        // activate the condensed sidebar if smaller devices like ipad or tablet\n        if (window.innerWidth >= 768 && window.innerWidth <= 1028) {\n            dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED));\n        } else if (window.innerWidth > 1028) {\n            dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\n        }\n    }, [dispatch]);\n\n    useEffect(() => {\n        window.addEventListener('resize', updateDimensions);\n\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n        };\n    }, [dispatch, updateDimensions]);\n\n    const isCondensed = leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED;\n    const isLight = leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_LIGHT;\n\n    return (\n        <>\n            <div className=\"wrapper\">\n                <Suspense fallback={loading()}>\n                    <LeftSidebar isCondensed={isCondensed} isLight={isLight} hideUserProfile={true} />\n                </Suspense>\n                <div className=\"content-page\">\n                    <div className=\"content\">\n                        <Suspense fallback={loading()}>\n                            <Topbar openLeftMenuCallBack={openMenu} hideLogo={true} />\n                        </Suspense>\n                        <Container fluid>\n                            <Outlet />\n                        </Container>\n                    </div>\n\n                    <Suspense fallback={loading()}>\n                        <Footer />\n                    </Suspense>\n                </div>\n            </div>\n\n            <Suspense fallback={loading()}>\n                <RightSidebar>\n                    <ThemeCustomizer />\n                </RightSidebar>\n            </Suspense>\n        </>\n    );\n};\nexport default FullLayout;\n","import React, { Suspense } from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport PrivateRoute from './PrivateRoute';\nimport Root from './Root';\nimport * as layoutConstants from '../constants/layout';\n\n// All layouts/containers\nimport DefaultLayout from '../layouts/Default';\nimport VerticalLayout from '../layouts/Vertical';\nimport DetachedLayout from '../layouts/Detached';\nimport HorizontalLayout from '../layouts/Horizontal';\nimport FullLayout from '../layouts/Full';\n\n// lazy load all the views\n\n// auth\nconst Login = React.lazy(() => import('../pages/account/Login'));\nconst Logout = React.lazy(() => import('../pages/account/Logout'));\nconst Register = React.lazy(() => import('../pages/account/Register'));\nconst Confirm = React.lazy(() => import('../pages/account/Confirm'));\nconst ForgetPassword = React.lazy(() => import('../pages/account/ForgetPassword'));\nconst LockScreen = React.lazy(() => import('../pages/account/LockScreen'));\n\nconst Login2 = React.lazy(() => import('../pages/account2/Login2'));\nconst Logout2 = React.lazy(() => import('../pages/account2/Logout2'));\nconst Register2 = React.lazy(() => import('../pages/account2/Register2'));\nconst Confirm2 = React.lazy(() => import('../pages/account2/Confirm2'));\nconst ForgetPassword2 = React.lazy(() => import('../pages/account2/ForgetPassword2'));\nconst LockScreen2 = React.lazy(() => import('../pages/account2/LockScreen2'));\n\n// dashboard\nconst AnalyticsDashboard = React.lazy(() => import('../pages/dashboard/Analytics'));\nconst EcommerceDashboard = React.lazy(() => import('../pages/dashboard/Ecommerce'));\nconst ProjectDashboard = React.lazy(() => import('../pages/dashboard/Project'));\nconst EWalletDashboard = React.lazy(() => import('../pages/dashboard/E-Wallet'));\n\n// apps\nconst CalendarApp = React.lazy(() => import('../pages/apps/Calendar'));\nconst Projects = React.lazy(() => import('../pages/apps/Projects'));\nconst ProjectDetail = React.lazy(() => import('../pages/apps/Projects/Detail'));\nconst ProjectGannt = React.lazy(() => import('../pages/apps/Projects/Gantt'));\nconst ProjectForm = React.lazy(() => import('../pages/apps/Projects/ProjectForm'));\n\n// - chat\nconst ChatApp = React.lazy(() => import('../pages/apps/Chat'));\n\n// -crm\nconst CRMDashboard = React.lazy(() => import('../pages/apps/CRM/Dashboard'));\nconst CRMProjects = React.lazy(() => import('../pages/apps/CRM/Projects'));\nconst CRMManagement = React.lazy(() => import('../pages/apps/CRM/Management'));\nconst CRMClients = React.lazy(() => import('../pages/apps/CRM/Clients'));\nconst CRMOrderList = React.lazy(() => import('../pages/apps/CRM/OrderList'));\n\n// - ecommece pages\nconst EcommerceProducts = React.lazy(() => import('../pages/apps/Ecommerce/Products'));\nconst ProductDetails = React.lazy(() => import('../pages/apps/Ecommerce/ProductDetails'));\nconst Orders = React.lazy(() => import('../pages/apps/Ecommerce/Orders'));\nconst OrderDetails = React.lazy(() => import('../pages/apps/Ecommerce/OrderDetails'));\nconst Customers = React.lazy(() => import('../pages/apps/Ecommerce/Customers'));\nconst Cart = React.lazy(() => import('../pages/apps/Ecommerce/Cart'));\nconst Checkout = React.lazy(() => import('../pages/apps/Ecommerce/Checkout'));\nconst Sellers = React.lazy(() => import('../pages/apps/Ecommerce/Sellers'));\n\n// - email\nconst Inbox = React.lazy(() => import('../pages/apps/Email/Inbox'));\nconst EmailDetail = React.lazy(() => import('../pages/apps/Email/Detail'));\n\n// - social\nconst SocialFeed = React.lazy(() => import('../pages/apps/SocialFeed'));\n\n// - tasks\nconst TaskList = React.lazy(() => import('../pages/apps/Tasks/List'));\nconst TaskDetails = React.lazy(() => import('../pages/apps/Tasks/Details'));\nconst Kanban = React.lazy(() => import('../pages/apps/Tasks/Board'));\n// - file\nconst FileManager = React.lazy(() => import('../pages/apps/FileManager'));\n\n// pages\nconst Profile = React.lazy(() => import('../pages/profile'));\nconst Profile2 = React.lazy(() => import('../pages/profile2'));\nconst ErrorPageNotFound = React.lazy(() => import('../pages/error/PageNotFound'));\nconst ErrorPageNotFoundAlt = React.lazy(() => import('../pages/error/PageNotFoundAlt'));\nconst ServerError = React.lazy(() => import('../pages/error/ServerError'));\n\n// - other\nconst Invoice = React.lazy(() => import('../pages/other/Invoice'));\nconst FAQ = React.lazy(() => import('../pages/other/FAQ'));\nconst Pricing = React.lazy(() => import('../pages/other/Pricing'));\nconst Maintenance = React.lazy(() => import('../pages/other/Maintenance'));\nconst Starter = React.lazy(() => import('../pages/other/Starter'));\nconst PreLoader = React.lazy(() => import('../pages/other/PreLoader'));\nconst Timeline = React.lazy(() => import('../pages/other/Timeline'));\n\nconst Landing = React.lazy(() => import('../pages/landing'));\n\n// uikit\nconst Accordions = React.lazy(() => import('../pages/uikit/Accordions'));\nconst Alerts = React.lazy(() => import('../pages/uikit/Alerts'));\nconst Avatars = React.lazy(() => import('../pages/uikit/Avatars'));\nconst Badges = React.lazy(() => import('../pages/uikit/Badges'));\nconst Breadcrumbs = React.lazy(() => import('../pages/uikit/Breadcrumb'));\nconst Buttons = React.lazy(() => import('../pages/uikit/Buttons'));\nconst Cards = React.lazy(() => import('../pages/uikit/Cards'));\nconst Carousels = React.lazy(() => import('../pages/uikit/Carousel'));\nconst Dropdowns = React.lazy(() => import('../pages/uikit/Dropdowns'));\nconst EmbedVideo = React.lazy(() => import('../pages/uikit/EmbedVideo'));\nconst Grid = React.lazy(() => import('../pages/uikit/Grid'));\nconst ListGroups = React.lazy(() => import('../pages/uikit/ListGroups'));\nconst Modals = React.lazy(() => import('../pages/uikit/Modals'));\nconst Notifications = React.lazy(() => import('../pages/uikit/Notifications'));\nconst Offcanvases = React.lazy(() => import('../pages/uikit/Offcanvas'));\nconst Paginations = React.lazy(() => import('../pages/uikit/Paginations'));\nconst Popovers = React.lazy(() => import('../pages/uikit/Popovers'));\nconst Progress = React.lazy(() => import('../pages/uikit/Progress'));\nconst Ribbons = React.lazy(() => import('../pages/uikit/Ribbons'));\nconst Spinners = React.lazy(() => import('../pages/uikit/Spinners'));\nconst Tabs = React.lazy(() => import('../pages/uikit/Tabs'));\nconst Tooltips = React.lazy(() => import('../pages/uikit/Tooltips'));\nconst Typography = React.lazy(() => import('../pages/uikit/Typography'));\nconst DragDrop = React.lazy(() => import('../pages/uikit/DragDrop'));\nconst RangeSliders = React.lazy(() => import('../pages/uikit/RangeSliders'));\nconst Ratings = React.lazy(() => import('../pages/uikit/Ratings'));\n\n// icons\nconst Dripicons = React.lazy(() => import('../pages/icons/Dripicons'));\nconst MDIIcons = React.lazy(() => import('../pages/icons/MDIIcons'));\nconst Unicons = React.lazy(() => import('../pages/icons/Unicons'));\n\n// forms\nconst BasicForms = React.lazy(() => import('../pages/forms/Basic'));\nconst FormAdvanced = React.lazy(() => import('../pages/forms/Advanced'));\nconst FormValidation = React.lazy(() => import('../pages/forms/Validation'));\nconst FormWizard = React.lazy(() => import('../pages/forms/Wizard'));\nconst FileUpload = React.lazy(() => import('../pages/forms/FileUpload'));\nconst Editors = React.lazy(() => import('../pages/forms/Editors'));\n\n// charts\nconst ApexChart = React.lazy(() => import('../pages/charts/Apex'));\nconst BriteChart = React.lazy(() => import('../pages/charts/Brite'));\nconst ChartJs = React.lazy(() => import('../pages/charts/ChartJs'));\n\n// tables\nconst BasicTables = React.lazy(() => import('../pages/tables/Basic'));\nconst AdvancedTables = React.lazy(() => import('../pages/tables/Advanced'));\n\n// widgets\nconst Widgets = React.lazy(() => import('../pages/uikit/Widgets'));\n\n// maps\nconst GoogleMaps = React.lazy(() => import('../pages/maps/GoogleMaps'));\nconst VectorMaps = React.lazy(() => import('../pages/maps/VectorMaps'));\n\nconst loading = () => <div className=\"\"></div>;\n\ntype LoadComponentProps = {\n    component: React.LazyExoticComponent<() => JSX.Element>,\n};\n\nconst LoadComponent = ({ component: Component }: LoadComponentProps) => (\n    <Suspense fallback={loading()}>\n        <Component />\n    </Suspense>\n);\n\nconst AllRoutes = () => {\n    const { layout } = useSelector((state) => ({\n        layout: state.Layout,\n    }));\n\n    const getLayout = () => {\n        let layoutCls = VerticalLayout;\n\n        switch (layout.layoutType) {\n            case layoutConstants.LAYOUT_HORIZONTAL:\n                layoutCls = HorizontalLayout;\n                break;\n            case layoutConstants.LAYOUT_DETACHED:\n                layoutCls = DetachedLayout;\n                break;\n            case layoutConstants.LAYOUT_FULL:\n                layoutCls = FullLayout;\n                break;\n            default:\n                layoutCls = VerticalLayout;\n                break;\n        }\n        return layoutCls;\n    };\n    let Layout = getLayout();\n\n    return useRoutes([\n        { path: '/', element: <Root /> },\n        {\n            // public routes\n            path: '/',\n            element: <DefaultLayout />,\n            children: [\n                {\n                    path: 'account',\n                    children: [\n                        { path: 'login', element: <LoadComponent component={Login} /> },\n                        { path: 'register', element: <LoadComponent component={Register} /> },\n                        { path: 'confirm', element: <LoadComponent component={Confirm} /> },\n                        { path: 'forget-password', element: <LoadComponent component={ForgetPassword} /> },\n                        { path: 'lock-screen', element: <LoadComponent component={LockScreen} /> },\n                        { path: 'logout', element: <LoadComponent component={Logout} /> },\n                        { path: 'login2', element: <LoadComponent component={Login2} /> },\n                        { path: 'register2', element: <LoadComponent component={Register2} /> },\n                        { path: 'confirm2', element: <LoadComponent component={Confirm2} /> },\n                        { path: 'forget-password2', element: <LoadComponent component={ForgetPassword2} /> },\n                        { path: 'lock-screen2', element: <LoadComponent component={LockScreen2} /> },\n                        { path: 'logout2', element: <LoadComponent component={Logout2} /> },\n                    ],\n                },\n                {\n                    path: 'error-404',\n                    element: <LoadComponent component={ErrorPageNotFound} />,\n                },\n                {\n                    path: 'error-500',\n                    element: <LoadComponent component={ServerError} />,\n                },\n                {\n                    path: 'maintenance',\n                    element: <LoadComponent component={Maintenance} />,\n                },\n                {\n                    path: 'landing',\n                    element: <LoadComponent component={Landing} />,\n                },\n            ],\n        },\n        {\n            // auth protected routes\n            path: '/',\n            element: <PrivateRoute roles={'Admin'} component={Layout} />,\n            children: [\n                {\n                    path: 'dashboard',\n                    children: [\n                        {\n                            path: 'analytics',\n                            element: <LoadComponent component={AnalyticsDashboard} />,\n                        },\n                        {\n                            path: 'ecommerce',\n                            element: <LoadComponent component={EcommerceDashboard} />,\n                        },\n                        {\n                            path: 'project',\n                            element: <LoadComponent component={ProjectDashboard} />,\n                        },\n                        {\n                            path: 'e-wallet',\n                            element: <LoadComponent component={EWalletDashboard} />,\n                        },\n                    ],\n                },\n                {\n                    path: 'apps',\n                    children: [\n                        {\n                            path: 'calendar',\n                            element: <LoadComponent component={CalendarApp} />,\n                        },\n                        {\n                            path: 'chat',\n                            element: <LoadComponent component={ChatApp} />,\n                        },\n                        {\n                            path: 'crm',\n                            children: [\n                                {\n                                    path: 'dashboard',\n                                    element: <LoadComponent component={CRMDashboard} />,\n                                },\n                                {\n                                    path: 'projects',\n                                    element: <LoadComponent component={CRMProjects} />,\n                                },\n                                {\n                                    path: 'management',\n                                    element: <LoadComponent component={CRMManagement} />,\n                                },\n                                {\n                                    path: 'clients',\n                                    element: <LoadComponent component={CRMClients} />,\n                                },\n                                {\n                                    path: 'orders',\n                                    element: <LoadComponent component={CRMOrderList} />,\n                                },\n                            ],\n                        },\n                        {\n                            path: 'ecommerce',\n                            children: [\n                                {\n                                    path: 'products',\n                                    element: <LoadComponent component={EcommerceProducts} />,\n                                },\n                                {\n                                    path: 'details',\n                                    element: <LoadComponent component={ProductDetails} />,\n                                },\n                                {\n                                    path: 'orders',\n                                    element: <LoadComponent component={Orders} />,\n                                },\n                                {\n                                    path: 'order/details',\n                                    element: <LoadComponent component={OrderDetails} />,\n                                },\n                                {\n                                    path: 'customers',\n                                    element: <LoadComponent component={Customers} />,\n                                },\n                                {\n                                    path: 'shopping-cart',\n                                    element: <LoadComponent component={Cart} />,\n                                },\n                                {\n                                    path: 'checkout',\n                                    element: <LoadComponent component={Checkout} />,\n                                },\n                                {\n                                    path: 'sellers',\n                                    element: <LoadComponent component={Sellers} />,\n                                },\n                            ],\n                        },\n                        {\n                            path: 'email',\n                            children: [\n                                {\n                                    path: 'inbox',\n                                    element: <LoadComponent component={Inbox} />,\n                                },\n                                {\n                                    path: 'details',\n                                    element: <LoadComponent component={EmailDetail} />,\n                                },\n                            ],\n                        },\n                        {\n                            path: 'tasks',\n                            children: [\n                                {\n                                    path: 'list',\n                                    element: <LoadComponent component={TaskList} />,\n                                },\n                                {\n                                    path: 'kanban',\n                                    element: <LoadComponent component={Kanban} />,\n                                },\n                                {\n                                    path: 'details',\n                                    element: <LoadComponent component={TaskDetails} />,\n                                },\n                            ],\n                        },\n\n                        {\n                            path: 'projects',\n                            children: [\n                                {\n                                    path: 'list',\n                                    element: <LoadComponent component={Projects} />,\n                                },\n                                {\n                                    path: 'details',\n                                    element: <LoadComponent component={ProjectDetail} />,\n                                },\n                                {\n                                    path: 'gantt',\n                                    element: <LoadComponent component={ProjectGannt} />,\n                                },\n                                {\n                                    path: 'new',\n                                    element: <LoadComponent component={ProjectForm} />,\n                                },\n                            ],\n                        },\n                        {\n                            path: 'social',\n                            element: <LoadComponent component={SocialFeed} />,\n                        },\n                        {\n                            path: 'file',\n                            element: <LoadComponent component={FileManager} />,\n                        },\n                    ],\n                },\n                {\n                    path: 'pages',\n                    children: [\n                        {\n                            path: 'starter',\n                            element: <LoadComponent component={Starter} />,\n                        },\n                        {\n                            path: 'profile',\n                            element: <LoadComponent component={Profile} />,\n                        },\n                        {\n                            path: 'profile2',\n                            element: <LoadComponent component={Profile2} />,\n                        },\n                        {\n                            path: 'pricing',\n                            element: <LoadComponent component={Pricing} />,\n                        },\n                        {\n                            path: 'error-404-alt',\n                            element: <LoadComponent component={ErrorPageNotFoundAlt} />,\n                        },\n                        {\n                            path: 'timeline',\n                            element: <LoadComponent component={Timeline} />,\n                        },\n                        {\n                            path: 'invoice',\n                            element: <LoadComponent component={Invoice} />,\n                        },\n                        {\n                            path: 'faq',\n                            element: <LoadComponent component={FAQ} />,\n                        },\n                        {\n                            path: 'preloader',\n                            element: <LoadComponent component={PreLoader} />,\n                        },\n                    ],\n                },\n                {\n                    path: 'ui',\n                    children: [\n                        {\n                            path: 'base-ui',\n                            children: [\n                                {\n                                    path: 'accordions',\n                                    element: <LoadComponent component={Accordions} />,\n                                },\n                                {\n                                    path: 'alerts',\n                                    element: <LoadComponent component={Alerts} />,\n                                },\n                                {\n                                    path: 'avatars',\n                                    element: <LoadComponent component={Avatars} />,\n                                },\n                                {\n                                    path: 'badges',\n                                    element: <LoadComponent component={Badges} />,\n                                },\n                                {\n                                    path: 'breadcrumb',\n                                    element: <LoadComponent component={Breadcrumbs} />,\n                                },\n                                {\n                                    path: 'buttons',\n                                    element: <LoadComponent component={Buttons} />,\n                                },\n                                {\n                                    path: 'cards',\n                                    element: <LoadComponent component={Cards} />,\n                                },\n                                {\n                                    path: 'carousel',\n                                    element: <LoadComponent component={Carousels} />,\n                                },\n                                {\n                                    path: 'dropdowns',\n                                    element: <LoadComponent component={Dropdowns} />,\n                                },\n                                {\n                                    path: 'embedvideo',\n                                    element: <LoadComponent component={EmbedVideo} />,\n                                },\n                                {\n                                    path: 'grid',\n                                    element: <LoadComponent component={Grid} />,\n                                },\n                                {\n                                    path: 'listgroups',\n                                    element: <LoadComponent component={ListGroups} />,\n                                },\n                                {\n                                    path: 'modals',\n                                    element: <LoadComponent component={Modals} />,\n                                },\n                                {\n                                    path: 'notifications',\n                                    element: <LoadComponent component={Notifications} />,\n                                },\n                                {\n                                    path: 'offcanvas',\n                                    element: <LoadComponent component={Offcanvases} />,\n                                },\n                                {\n                                    path: 'paginations',\n                                    element: <LoadComponent component={Paginations} />,\n                                },\n                                // {\n                                //     path: 'placeholders',\n                                //     element: <LoadComponent component={Placeholders} />,\n                                // },\n                                {\n                                    path: 'popovers',\n                                    element: <LoadComponent component={Popovers} />,\n                                },\n                                {\n                                    path: 'progress',\n                                    element: <LoadComponent component={Progress} />,\n                                },\n                                {\n                                    path: 'ribbons',\n                                    element: <LoadComponent component={Ribbons} />,\n                                },\n                                {\n                                    path: 'spinners',\n                                    element: <LoadComponent component={Spinners} />,\n                                },\n                                {\n                                    path: 'tabs',\n                                    element: <LoadComponent component={Tabs} />,\n                                },\n                                {\n                                    path: 'tooltips',\n                                    element: <LoadComponent component={Tooltips} />,\n                                },\n                                {\n                                    path: 'typography',\n                                    element: <LoadComponent component={Typography} />,\n                                },\n                            ],\n                        },\n                        {\n                            path: 'widgets',\n                            element: <LoadComponent component={Widgets} />,\n                        },\n                        {\n                            path: 'extended',\n                            children: [\n                                {\n                                    path: 'dragdrop',\n                                    element: <LoadComponent component={DragDrop} />,\n                                },\n                                {\n                                    path: 'rangesliders',\n                                    element: <LoadComponent component={RangeSliders} />,\n                                },\n                                {\n                                    path: 'ratings',\n                                    element: <LoadComponent component={Ratings} />,\n                                },\n                            ],\n                        },\n                        {\n                            path: 'icons',\n                            children: [\n                                {\n                                    path: 'unicons',\n                                    element: <LoadComponent component={Unicons} />,\n                                },\n                                {\n                                    path: 'mdi',\n                                    element: <LoadComponent component={MDIIcons} />,\n                                },\n                                {\n                                    path: 'dripicons',\n                                    element: <LoadComponent component={Dripicons} />,\n                                },\n                            ],\n                        },\n                        {\n                            path: 'forms',\n                            children: [\n                                {\n                                    path: 'basic',\n                                    element: <LoadComponent component={BasicForms} />,\n                                },\n                                {\n                                    path: 'advanced',\n                                    element: <LoadComponent component={FormAdvanced} />,\n                                },\n                                {\n                                    path: 'validation',\n                                    element: <LoadComponent component={FormValidation} />,\n                                },\n                                {\n                                    path: 'wizard',\n                                    element: <LoadComponent component={FormWizard} />,\n                                },\n                                {\n                                    path: 'upload',\n                                    element: <LoadComponent component={FileUpload} />,\n                                },\n                                {\n                                    path: 'editors',\n                                    element: <LoadComponent component={Editors} />,\n                                },\n                            ],\n                        },\n                        {\n                            path: 'tables',\n                            children: [\n                                {\n                                    path: 'basic',\n                                    element: <LoadComponent component={BasicTables} />,\n                                },\n                                {\n                                    path: 'advanced',\n                                    element: <LoadComponent component={AdvancedTables} />,\n                                },\n                            ],\n                        },\n                        {\n                            path: 'charts',\n                            children: [\n                                {\n                                    path: 'apex',\n                                    element: <LoadComponent component={ApexChart} />,\n                                },\n                                {\n                                    path: 'brite',\n                                    element: <LoadComponent component={BriteChart} />,\n                                },\n                                {\n                                    path: 'chartjs',\n                                    element: <LoadComponent component={ChartJs} />,\n                                },\n                            ],\n                        },\n                        {\n                            path: 'maps',\n                            children: [\n                                {\n                                    path: 'googlemaps',\n                                    element: <LoadComponent component={GoogleMaps} />,\n                                },\n                                {\n                                    path: 'vectormaps',\n                                    element: <LoadComponent component={VectorMaps} />,\n                                },\n                            ],\n                        },\n                    ],\n                },\n            ],\n        },\n    ]);\n};\n\nexport { AllRoutes };\n","import { BrowserRouter } from 'react-router-dom';\nimport { AllRoutes } from './index';\n\nconst Routes = () => {\n    return (\n        <BrowserRouter>\n            <AllRoutes />\n        </BrowserRouter>\n    );\n};\n\nexport default Routes;\n","import axios from 'axios';\nimport MockAdapter from 'axios-mock-adapter';\n\nconst TOKEN =\n    'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJIeXBlciJ9.P27f7JNBF-vOaJFpkn-upfEh3zSprYfyhTOYhijykdI';\n\nvar mock = new MockAdapter(axios, { onNoMatch: 'passthrough' });\n\nexport function configureFakeBackend() {\n    let users = [\n        {\n            id: 1,\n            username: 'test',\n            password: 'test',\n            firstName: 'Test',\n            lastName: 'User',\n            role: 'Admin',\n            token: TOKEN,\n        },\n    ];\n\n    mock.onPost('/login/').reply(function (config) {\n        return new Promise(function (resolve, reject) {\n            setTimeout(function () {\n                // get parameters from post request\n                let params = JSON.parse(config.data);\n\n                // find if any user matches login credentials\n                let filteredUsers = users.filter((user) => {\n                    return user.username === params.username && user.password === params.password;\n                });\n\n                if (filteredUsers.length) {\n                    // if login details are valid return user details and fake jwt token\n                    let user = filteredUsers[0];\n                    resolve([200, user]);\n                } else {\n                    // else return error\n                    resolve([401, { message: 'Username or password is incorrect' }]);\n                }\n            }, 1000);\n        });\n    });\n\n    mock.onPost('/logout/').reply(function (config) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                resolve([200, 'You have successfully logged out!']);\n            });\n        });\n    });\n\n    mock.onPost('/register/').reply(function (config) {\n        return new Promise(function (resolve, reject) {\n            setTimeout(function () {\n                // get parameters from post request\n                let params = JSON.parse(config.data);\n\n                // add new users\n                let [firstName, lastName] = params.fullname.split(' ');\n                let newUser = {\n                    id: users.length + 1,\n                    username: firstName,\n                    password: params.password,\n                    firstName: firstName,\n                    lastName: lastName,\n                    role: 'Admin',\n                    token: TOKEN,\n                };\n                users.push({ newUser });\n\n                resolve([200, newUser]);\n            }, 1000);\n        });\n    });\n\n    mock.onPost('/forget-password/').reply(function (config) {\n        return new Promise(function (resolve, reject) {\n            setTimeout(function () {\n                // get parameters from post request\n                let params = JSON.parse(config.data);\n\n                // find if any user matches login credentials\n                let filteredUsers = users.filter((user) => {\n                    return user.username === params.username;\n                });\n\n                if (filteredUsers.length) {\n                    // if login details are valid return user details and fake jwt token\n                    let responseJson = {\n                        message: \"We've sent you a link to reset password to your registered email.\",\n                    };\n                    resolve([200, responseJson]);\n                } else {\n                    // else return error\n                    resolve([\n                        401,\n                        {\n                            message: 'Sorry, we could not find any registered user with entered username',\n                        },\n                    ]);\n                }\n            }, 1000);\n        });\n    });\n}\n","// @flow\nimport { APICore } from './apiCore';\n\nconst api = new APICore();\n\n// account\nfunction login(params: any): any {\n    const baseUrl = '/login/';\n    return api.create(`${baseUrl}`, params);\n}\n\nfunction logout(): any {\n    const baseUrl = '/logout/';\n    return api.create(`${baseUrl}`, {});\n}\n\nfunction signup(params: any): any {\n    const baseUrl = '/register/';\n    return api.create(`${baseUrl}`, params);\n}\n\nfunction forgotPassword(params: any): any {\n    const baseUrl = '/forget-password/';\n    return api.create(`${baseUrl}`, params);\n}\n\nfunction forgotPasswordConfirm(params: any): any {\n    const baseUrl = '/password/reset/confirm/';\n    return api.create(`${baseUrl}`, params);\n}\n\nexport { login, logout, signup, forgotPassword, forgotPasswordConfirm };\n","// @flow\nimport React from 'react';\nimport Routes from './routes/Routes';\n\n// setup fake backend\nimport { configureFakeBackend } from './helpers';\n\n// Themes\n\n// For Saas import Saas.scss\nimport './assets/scss/Creative.scss';\n\n// For Modern demo import Modern.scss\n// import './assets/scss/Modern.scss';\n\n// For Creative demo import Creative.scss\n// import './assets/scss/Creative.scss';\n\n// configure fake backend\nconfigureFakeBackend();\n\ntype AppProps = {};\n\n/**\n * Main app component\n */\nconst App = (props: AppProps): React$Element<any> => {\n    return <Routes></Routes>;\n};\n\nexport default App;\n","// @flow\nimport { AuthActionTypes } from './constants';\n\nimport { APICore } from '../../helpers/api/apiCore';\n\nconst api = new APICore();\n\nconst INIT_STATE = {\n    user: api.getLoggedInUser(),\n    loading: false,\n};\n\ntype AuthAction = {\n    type: string,\n    payload: { actionType?: string, data?: any, error?: string },\n};\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Auth = (state: State = INIT_STATE, action: AuthAction): any => {\n    console.log(action);\n    switch (action.type) {\n        case AuthActionTypes.API_RESPONSE_SUCCESS:\n            switch (action.payload.actionType) {\n                case AuthActionTypes.LOGIN_USER: {\n                    return {\n                        ...state,\n                        user: action.payload.data,\n                        userLoggedIn: true,\n                        loading: false,\n                    };\n                }\n                case AuthActionTypes.SIGNUP_USER: {\n                    return {\n                        ...state,\n                        loading: false,\n                        userSignUp: true,\n                    };\n                }\n                case AuthActionTypes.LOGOUT_USER: {\n                    return {\n                        ...state,\n                        user: null,\n                        loading: false,\n                        userLogout: true,\n                    };\n                }\n                case AuthActionTypes.FORGOT_PASSWORD: {\n                    return {\n                        ...state,\n                        resetPasswordSuccess: action.payload.data,\n                        loading: false,\n                        passwordReset: true,\n                    };\n                }\n                case AuthActionTypes.FORGOT_PASSWORD_CHANGE: {\n                    return {\n                        ...state,\n                        loading: false,\n                        passwordChange: true,\n                    };\n                }\n                default:\n                    return { ...state };\n            }\n\n        case AuthActionTypes.API_RESPONSE_ERROR:\n            switch (action.payload.actionType) {\n                case AuthActionTypes.LOGIN_USER: {\n                    return {\n                        ...state,\n                        error: action.payload.error,\n                        userLoggedIn: false,\n                        loading: false,\n                    };\n                }\n                case AuthActionTypes.SIGNUP_USER: {\n                    return {\n                        ...state,\n                        registerError: action.payload.error,\n                        userSignUp: false,\n                        loading: false,\n                    };\n                }\n                case AuthActionTypes.FORGOT_PASSWORD: {\n                    return {\n                        ...state,\n                        error: action.payload.error,\n                        loading: false,\n                        passwordReset: false,\n                    };\n                }\n                case AuthActionTypes.FORGOT_PASSWORD_CHANGE: {\n                    return {\n                        ...state,\n                        error: action.payload.error,\n                        loading: false,\n                        passwordChange: false,\n                    };\n                }\n                default:\n                    return { ...state };\n            }\n\n        case AuthActionTypes.LOGIN_USER:\n            return { ...state, loading: true, userLoggedIn: false };\n        case AuthActionTypes.LOGOUT_USER:\n            return { ...state, loading: true, userLogout: false };\n        case AuthActionTypes.SIGNUP_USER:\n            return { ...state, loading: true, userSignUp: false };\n        case AuthActionTypes.FORGOT_PASSWORD:\n            return { ...state, loading: true, passwordReset: false };\n        case AuthActionTypes.FORGOT_PASSWORD_CHANGE:\n            return { ...state, loading: true, passwordChange: false };\n        case AuthActionTypes.RESET:\n            return {\n                ...state,\n                loading: false,\n                error: false,\n                userSignUp: false,\n                userLoggedIn: false,\n                passwordReset: false,\n                passwordChange: false,\n                resetPasswordSuccess: null,\n            };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","// @flow\nimport { LayoutActionTypes } from './constants';\n\nimport * as layoutConstants from '../../constants/layout';\n\nconst INIT_STATE = {\n    layoutColor: layoutConstants.LAYOUT_COLOR_DARK,\n    layoutType: layoutConstants.LAYOUT_HORIZONTAL,\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DARK,\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\n    showRightSidebar: false,\n};\n\ntype LayoutAction = { type: string, payload?: string | null };\n\ntype State = {\n    layoutType: string,\n    layoutColor: string,\n    layoutWidth: string,\n    leftSideBarTheme: string,\n    leftSideBarType: string,\n    showRightSidebar?: boolean,\n};\n\nconst Layout = (state: State = INIT_STATE, action: LayoutAction): any => {\n    switch (action.type) {\n        case LayoutActionTypes.CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_LAYOUT_COLOR:\n            return {\n                ...state,\n                layoutColor: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_LAYOUT_WIDTH:\n            return {\n                ...state,\n                layoutWidth: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        case LayoutActionTypes.SHOW_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: true,\n            };\n        case LayoutActionTypes.HIDE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","// @flow\nimport { combineReducers } from 'redux';\n\nimport Auth from './auth/reducers';\nimport Layout from './layout/reducers';\n\nexport default (combineReducers({\n    Auth,\n    Layout,\n}): any);\n","// @flow\nimport { all, fork, put, takeEvery, call } from 'redux-saga/effects';\n\nimport {\n    login as loginApi,\n    logout as logoutApi,\n    signup as signupApi,\n    forgotPassword as forgotPasswordApi,\n    forgotPasswordConfirm,\n} from '../../helpers/';\n\nimport { APICore, setAuthorization } from '../../helpers/api/apiCore';\nimport { authApiResponseSuccess, authApiResponseError } from './actions';\nimport { AuthActionTypes } from './constants';\n\nconst api = new APICore();\n\n/**\n * Login the user\n * @param {*} payload - username and password\n */\nfunction* login({ payload: { username, password } }) {\n    try {\n        const response = yield call(loginApi, { username, password });\n        const user = response.data;\n        // NOTE - You can change this according to response format from your api\n        api.setLoggedInUser(user);\n        setAuthorization(user['token']);\n        yield put(authApiResponseSuccess(AuthActionTypes.LOGIN_USER, user));\n    } catch (error) {\n        yield put(authApiResponseError(AuthActionTypes.LOGIN_USER, error));\n        api.setLoggedInUser(null);\n        setAuthorization(null);\n    }\n}\n\n/**\n * Logout the user\n */\nfunction* logout() {\n    try {\n        yield call(logoutApi);\n        api.setLoggedInUser(null);\n        setAuthorization(null);\n        yield put(authApiResponseSuccess(AuthActionTypes.LOGOUT_USER, {}));\n    } catch (error) {\n        yield put(authApiResponseError(AuthActionTypes.LOGOUT_USER, error));\n    }\n}\n\nfunction* signup({ payload: { fullname, email, password } }) {\n    try {\n        const response = yield call(signupApi, { fullname, email, password });\n        const user = response.data;\n        // api.setLoggedInUser(user);\n        // setAuthorization(user['token']);\n        yield put(authApiResponseSuccess(AuthActionTypes.SIGNUP_USER, user));\n    } catch (error) {\n        yield put(authApiResponseError(AuthActionTypes.SIGNUP_USER, error));\n        api.setLoggedInUser(null);\n        setAuthorization(null);\n    }\n}\n\nfunction* forgotPassword({ payload: { username } }) {\n    try {\n        const response = yield call(forgotPasswordApi, { username });\n        yield put(authApiResponseSuccess(AuthActionTypes.FORGOT_PASSWORD, response.data));\n    } catch (error) {\n        yield put(authApiResponseError(AuthActionTypes.FORGOT_PASSWORD, error));\n    }\n}\n\nfunction* forgotPasswordChange({ payload: { data } }) {\n    try {\n        const response = yield call(forgotPasswordConfirm, data);\n        yield put(authApiResponseSuccess(AuthActionTypes.FORGOT_PASSWORD_CHANGE, response.data));\n    } catch (error) {\n        yield put(authApiResponseError(AuthActionTypes.FORGOT_PASSWORD_CHANGE, error));\n    }\n}\n\nexport function* watchLoginUser(): any {\n    yield takeEvery(AuthActionTypes.LOGIN_USER, login);\n}\n\nexport function* watchLogout(): any {\n    yield takeEvery(AuthActionTypes.LOGOUT_USER, logout);\n}\n\nexport function* watchSignup(): any {\n    yield takeEvery(AuthActionTypes.SIGNUP_USER, signup);\n}\n\nexport function* watchForgotPassword(): any {\n    yield takeEvery(AuthActionTypes.FORGOT_PASSWORD, forgotPassword);\n}\n\nexport function* watchForgotPasswordChange(): any {\n    yield takeEvery(AuthActionTypes.FORGOT_PASSWORD_CHANGE, forgotPasswordChange);\n}\n\nfunction* authSaga(): any {\n    yield all([\n        fork(watchLoginUser),\n        fork(watchLogout),\n        fork(watchSignup),\n        fork(watchForgotPassword),\n        fork(watchForgotPasswordChange),\n    ]);\n}\n\nexport default authSaga;\n","// @flow\nimport { all, call, fork, takeEvery } from 'redux-saga/effects';\n\nimport { LayoutActionTypes } from './constants';\n\n/**\n * Toggle the class on body\n * @param {*} cssClass\n */\nfunction manageBodyClass(cssClass, action = 'toggle') {\n    switch (action) {\n        case 'add':\n            if (document.body) document.body.classList.add(cssClass);\n            break;\n        case 'remove':\n            if (document.body) document.body.classList.remove(cssClass);\n            break;\n        default:\n            if (document.body) document.body.classList.toggle(cssClass);\n            break;\n    }\n\n    return true;\n}\n\n/**\n * ---------------------------------------------------------------------------------------------------------------------------\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\n * For now, we are just applying the required logic on frontend side\n * ----------------------------------------------------------------------------------------------------------------------------\n */\n\n/**\n * Show the rightsidebar\n */\nfunction* showRightSidebar() {\n    try {\n        yield call(manageBodyClass, 'end-bar-enabled', 'add');\n    } catch (error) {}\n}\n\n/**\n * Hides the rightsidebar\n */\nfunction* hideRightSidebar() {\n    try {\n        yield call(manageBodyClass, 'end-bar-enabled', 'remove');\n    } catch (error) {}\n}\n\n/**\n * Watchers\n */\n\nexport function* watchShowRightSidebar(): any {\n    yield takeEvery(LayoutActionTypes.SHOW_RIGHT_SIDEBAR, showRightSidebar);\n}\n\nexport function* watchHideRightSidebar(): any {\n    yield takeEvery(LayoutActionTypes.HIDE_RIGHT_SIDEBAR, hideRightSidebar);\n}\n\nfunction* LayoutSaga(): any {\n    yield all([fork(watchShowRightSidebar), fork(watchHideRightSidebar)]);\n}\n\nexport default LayoutSaga;\n","// @flow\nimport { all } from 'redux-saga/effects';\n\nimport authSaga from './auth/saga';\nimport layoutSaga from './layout/saga';\n\nexport default function* rootSaga(): any {\n    yield all([authSaga(), layoutSaga()]);\n}\n","// @flow\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState: {}): any {\n    // const composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'];\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './i18n';\n\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\n\nReactDOM.render(\n    <Provider store={configureStore({})}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n","// @flow\nconst groupByFields = (array: Array<any>, f: any): Array<any> => {\n    /*\n    params description :\n        f : function which returnf the array of fields \n        e.g. :  (item) => {\n            return [itemField1, itemField2];\n        }\n        array : array of data to group e.g. : [{...}, {...}]       \n    */\n    var groups = {};\n    array.forEach((o) => {\n        var group = JSON.stringify(f(o));\n        groups[group] = groups[group] || [];\n        groups[group].push(o);\n    });\n    return Object.keys(groups).map((group) => {\n        return groups[group];\n    });\n};\n\nexport { groupByFields };\n","// @flow\n\n/**\n * Changes the body attribute\n */\nconst changeBodyAttribute = (attribute: string, value: string): void => {\n    if (document.body) document.body.setAttribute(attribute, value);\n};\n\nexport { changeBodyAttribute };\n","// @flow\nimport { LayoutActionTypes } from './constants';\n\ntype LayoutAction = { type: string, payload?: string | null };\n\nexport const changeLayout = (layout: string): LayoutAction => ({\n    type: LayoutActionTypes.CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutColor = (color: string): LayoutAction => ({\n    type: LayoutActionTypes.CHANGE_LAYOUT_COLOR,\n    payload: color,\n});\n\nexport const changeLayoutWidth = (width: string): LayoutAction => ({\n    type: LayoutActionTypes.CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeSidebarTheme = (theme: string): LayoutAction => ({\n    type: LayoutActionTypes.CHANGE_SIDEBAR_THEME,\n    payload: theme,\n});\n\nexport const changeSidebarType = (sidebarType: string): LayoutAction => ({\n    type: LayoutActionTypes.CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n\nexport const showRightSidebar = (): LayoutAction => ({\n    type: LayoutActionTypes.SHOW_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const hideRightSidebar = (): LayoutAction => ({\n    type: LayoutActionTypes.HIDE_RIGHT_SIDEBAR,\n    payload: null,\n});\n","export const LayoutActionTypes = {\n    CHANGE_LAYOUT: '@@layout/CHANGE_LAYOUT',\n    CHANGE_LAYOUT_COLOR: '@@layout/CHANGE_LAYOUT_COLOR',\n    CHANGE_LAYOUT_WIDTH: '@@layout/CHANGE_LAYOUT_WIDTH',\n    CHANGE_SIDEBAR_THEME: '@@layout/CHANGE_SIDEBAR_THEME',\n    CHANGE_SIDEBAR_TYPE: '@@layout/CHANGE_SIDEBAR_TYPE',\n\n    TOGGLE_RIGHT_SIDEBAR: '@@layout/TOGGLE_RIGHT_SIDEBAR',\n    SHOW_RIGHT_SIDEBAR: '@@layout/SHOW_RIGHT_SIDEBAR',\n    HIDE_RIGHT_SIDEBAR: '@@layout/HIDE_RIGHT_SIDEBAR',\n};\n","// @flow\nimport { AuthActionTypes } from './constants';\n\ntype AuthAction = { type: string, payload: {} | string };\n\n// common success\nexport const authApiResponseSuccess = (actionType: string, data: any): AuthAction => ({\n    type: AuthActionTypes.API_RESPONSE_SUCCESS,\n    payload: { actionType, data },\n});\n// common error\nexport const authApiResponseError = (actionType: string, error: string): AuthAction => ({\n    type: AuthActionTypes.API_RESPONSE_ERROR,\n    payload: { actionType, error },\n});\n\nexport const loginUser = (username: string, password: string): AuthAction => ({\n    type: AuthActionTypes.LOGIN_USER,\n    payload: { username, password },\n});\n\nexport const logoutUser = (): AuthAction => ({\n    type: AuthActionTypes.LOGOUT_USER,\n    payload: {},\n});\n\nexport const signupUser = (fullname: string, email: string, password: string): AuthAction => ({\n    type: AuthActionTypes.SIGNUP_USER,\n    payload: { fullname, email, password },\n});\n\nexport const forgotPassword = (username: string): AuthAction => ({\n    type: AuthActionTypes.FORGOT_PASSWORD,\n    payload: { username },\n});\n\nexport const forgotPasswordChange = (username: string): AuthAction => ({\n    type: AuthActionTypes.FORGOT_PASSWORD_CHANGE,\n    payload: { username },\n});\n\nexport const resetAuth = (): AuthAction => ({\n    type: AuthActionTypes.RESET,\n    payload: {},\n});\n","/* Layout types and other constants */\n\nexport const LAYOUT_VERTICAL = 'vertical';\nexport const LAYOUT_HORIZONTAL = 'topnav';\nexport const LAYOUT_DETACHED = 'detached';\nexport const LAYOUT_FULL = 'full';\n\nexport const LAYOUT_COLOR_LIGHT = 'light';\nexport const LAYOUT_COLOR_DARK = 'dark';\n\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\n\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\nexport const LEFT_SIDEBAR_THEME_LIGHT = 'light';\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\n\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\n","export const AuthActionTypes = {\n    API_RESPONSE_SUCCESS: '@@auth/API_RESPONSE_SUCCESS',\n    API_RESPONSE_ERROR: '@@auth/API_RESPONSE_ERROR',\n\n    LOGIN_USER: '@@auth/LOGIN_USER',\n    LOGOUT_USER: '@@auth/LOGOUT_USER',\n    SIGNUP_USER: '@@auth/SIGNUP_USER',\n    FORGOT_PASSWORD: '@@auth/FORGOT_PASSWORD',\n    FORGOT_PASSWORD_CHANGE: '@@auth/FORGOT_PASSWORD_CHANGE',\n\n    RESET: '@@auth/RESET',\n};\n"],"sourceRoot":""}