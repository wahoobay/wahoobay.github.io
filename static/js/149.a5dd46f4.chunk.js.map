{"version":3,"sources":["assets/images/maintenance.svg","pages/other/Maintenance.js","../node_modules/react-bootstrap/esm/Row.js"],"names":["Maintenance","useEffect","document","body","classList","remove","className","Container","Row","Col","xl","src","maintenanceImg","height","alt","icon","title","desc","map","item","index","md","classNames","React","ref","bsPrefix","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","displayName"],"mappings":"sKAAe,MAA0B,wC,OC2E1BA,UAnEK,WAuBhB,OAJAC,qBAAU,WACFC,SAASC,MAAMD,SAASC,KAAKC,UAAUC,OAAO,uBACnD,IAGC,qCACI,qBAAKC,UAAU,YAAf,SACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKF,UAAU,yBAAf,SACI,cAACG,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,sBAAKJ,UAAU,cAAf,UACI,qBAAKK,IAAKC,EAAgBC,OAAO,MAAMC,IAAI,KAC3C,oBAAIR,UAAU,OAAd,uCACA,mBAAGA,UAAU,aAAb,0EAIA,cAACE,EAAA,EAAD,CAAKF,UAAU,OAAf,SAnCH,CACrB,CACIS,KAAM,kBACNC,MAAO,wBACPC,KAAM,8GAEV,CACIF,KAAM,kBACNC,MAAO,wBACPC,KAAM,6HAEV,CACIF,KAAM,qBACNC,MAAO,uBACPC,KAAM,4HAsBoCC,KAAI,SAACC,EAAMC,GACzB,OACI,cAACX,EAAA,EAAD,CAAiBY,GAAI,EAArB,SACI,sBAAKf,UAAU,6BAAf,UACI,mBACIA,UAAWgB,IACP,aACA,mBACA,aACA,OACAH,EAAKJ,QAEb,oBAAIT,UAAU,iBAAd,SAAgCa,EAAKH,QACrC,mBAAGV,UAAU,aAAb,SAA2Ba,EAAKF,WAX9BG,mBAuB1C,wBAAQd,UAAU,oBAAlB,2D,2FClENE,EAAmBe,cAAiB,WAMvCC,GAAQ,IALTC,EAKS,EALTA,SACAnB,EAIS,EAJTA,UAIS,IAFToB,GAAIC,OAEK,MAFO,MAEP,EADNC,EACM,6CACHC,EAAoBC,YAAmBL,EAAU,OACjDM,EAAcC,cACdC,EAAa,GAAH,OAAMJ,EAAN,SACVK,EAAU,GAiBhB,OAhBAH,EAAYI,SAAQ,SAAAC,GAClB,IAEIC,EAFEC,EAAYV,EAAMQ,UACjBR,EAAMQ,GAKTC,EAFa,MAAbC,GAA0C,kBAAdA,EAG1BA,EADFD,KAGKC,EAGT,IAAMC,EAAqB,OAAbH,EAAA,WAAwBA,GAAa,GACvC,MAARC,GAAcH,EAAQM,KAAR,UAAgBP,GAAhB,OAA6BM,EAA7B,YAAsCF,OAEtCI,cAAKd,EAAD,YAAC,aACvBH,IAAKA,GACFI,GAFmB,IAGtBtB,UAAWgB,IAAU,WAAV,GAAWhB,EAAWuB,GAAtB,OAA4CK,UAG3D1B,EAAIkC,YAAc,MACHlC","file":"static/js/149.a5dd46f4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/maintenance.08340144.svg\";","// @flow\nimport React, { useEffect } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// images\nimport maintenanceImg from '../../assets/images/maintenance.svg';\n\nconst Maintenance = (): React$Element<React$FragmentType> => {\n    const maintenanceQuery = [\n        {\n            icon: 'dripicons-jewel',\n            title: 'Why is the Site Down?',\n            desc: 'There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration.',\n        },\n        {\n            icon: 'dripicons-clock',\n            title: 'What is the Downtime?',\n            desc: 'Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical but the majority.',\n        },\n        {\n            icon: 'dripicons-question',\n            title: 'Do you need Support?',\n            desc: \"If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embar... no-reply@domain.com\",\n        },\n    ];\n\n    useEffect(() => {\n        if (document.body) document.body.classList.remove('authentication-bg');\n    }, []);\n\n    return (\n        <>\n            <div className=\"mt-5 mb-5\">\n                <Container>\n                    <Row className=\"justify-content-center\">\n                        <Col xl={10}>\n                            <div className=\"text-center\">\n                                <img src={maintenanceImg} height=\"140\" alt=\"\" />\n                                <h3 className=\"mt-4\">Site is Under Maintenance</h3>\n                                <p className=\"text-muted\">\n                                    We're making the system more awesome. We'll be back shortly.\n                                </p>\n\n                                <Row className=\"mt-5\">\n                                    {maintenanceQuery.map((item, index) => {\n                                        return (\n                                            <Col key={index} md={4}>\n                                                <div className=\"text-center mt-3 ps-1 pe-1\">\n                                                    <i\n                                                        className={classNames(\n                                                            'bg-primary',\n                                                            'maintenance-icon',\n                                                            'text-white',\n                                                            'mb-2',\n                                                            item.icon\n                                                        )}></i>\n                                                    <h5 className=\"text-uppercase\">{item.title}</h5>\n                                                    <p className=\"text-muted\">{item.desc}</p>\n                                                </div>\n                                            </Col>\n                                        );\n                                    })}\n                                </Row>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n\n            <footer className=\"footer footer-alt\">2018 - 2021 Â© Hyper - Coderthemes.com</footer>\n        </>\n    );\n};\n\nexport default Maintenance;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"sourceRoot":""}