{"version":3,"sources":["pages/forms/Validation.js","components/PageTitle.js"],"names":["FormValidationWithTooltip","useState","validated","setValidated","Body","className","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","Group","controlId","Label","Control","required","type","placeholder","defaultValue","Feedback","tooltip","hasValidation","Text","id","aria-describedby","Check","label","feedback","FormValidation","breadCrumbItems","path","active","title","lg","PageTitle","props","listProps","Item","href","map","item","index"],"mappings":"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","file":"static/js/129.da518fe9.chunk.js","sourcesContent":["// @flow\nimport React, { useState } from 'react';\nimport { Row, Col, Card, Button, InputGroup, Form } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst FormValidationWithTooltip = () => {\n    const [validated, setValidated] = useState(false);\n\n    /*\n     * handle form submission\n     */\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        setValidated(true);\n    };\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title mb-3\">Tooltips</h4>\n\n                    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                        <Form.Group className=\"position-relative mb-3\" controlId=\"validationTooltip01\">\n                            <Form.Label>First name</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"First name\" defaultValue=\"Mark\" />\n                            <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"position-relative mb-3\" controlId=\"validationTooltip02\">\n                            <Form.Label>Last name</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"Last name\" defaultValue=\"Otto\" />\n                            <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"position-relative mb-3\" controlId=\"validationCustonTooltipme\">\n                            <Form.Label>Username</Form.Label>\n                            <InputGroup hasValidation>\n                                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Username\"\n                                    aria-describedby=\"inputGroupPrepend\"\n                                    required\n                                />\n                                <Form.Control.Feedback type=\"invalid\" tooltip>\n                                    Please choose a username.\n                                </Form.Control.Feedback>\n                            </InputGroup>\n                        </Form.Group>\n                        <Form.Group className=\"position-relative mb-3\" controlId=\"validationTooltip03\">\n                            <Form.Label>City</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"City\" required />\n                            <Form.Control.Feedback type=\"invalid\" tooltip>\n                                Please provide a valid city.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"position-relative mb-3\" controlId=\"validationTooltip04\">\n                            <Form.Label>State</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"State\" required />\n                            <Form.Control.Feedback type=\"invalid\" tooltip>\n                                Please provide a valid state.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"position-relative mb-3\" controlId=\"validationTooltip05\">\n                            <Form.Label>Zip</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Zip\" required />\n                            <Form.Control.Feedback type=\"invalid\" tooltip>\n                                Please provide a valid zip.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"position-relative mb-3\">\n                            <Form.Check\n                                required\n                                label=\"Agree to terms and conditions\"\n                                feedback=\"You must agree before submitting.\"\n                            />\n                        </Form.Group>\n                        <Button type=\"submit\">Submit form</Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst FormValidation = (): React$Element<React$FragmentType> => {\n    const [validated, setValidated] = useState(false);\n\n    /*\n     * handle form submission\n     */\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        setValidated(true);\n    };\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Forms', path: '/forms/validation' },\n                    { label: 'Form Validation', path: '/forms/validation', active: true },\n                ]}\n                title={'Form Validation'}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                                <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n                                    <Form.Label>First name</Form.Label>\n                                    <Form.Control required type=\"text\" placeholder=\"First name\" defaultValue=\"Mark\" />\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\" controlId=\"validationCustom02\">\n                                    <Form.Label>Last name</Form.Label>\n                                    <Form.Control required type=\"text\" placeholder=\"Last name\" defaultValue=\"Otto\" />\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\" controlId=\"validationCustomUsername\">\n                                    <Form.Label>Username</Form.Label>\n                                    <InputGroup hasValidation>\n                                        <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Username\"\n                                            aria-describedby=\"inputGroupPrepend\"\n                                            required\n                                        />\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Please choose a username.\n                                        </Form.Control.Feedback>\n                                    </InputGroup>\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\" controlId=\"validationCustom03\">\n                                    <Form.Label>City</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"City\" required />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please provide a valid city.\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\" controlId=\"validationCustom04\">\n                                    <Form.Label>State</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"State\" required />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please provide a valid state.\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\" controlId=\"validationCustom05\">\n                                    <Form.Label>Zip</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Zip\" required />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Please provide a valid zip.\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Check\n                                        required\n                                        label=\"Agree to terms and conditions\"\n                                        feedback=\"You must agree before submitting.\"\n                                    />\n                                </Form.Group>\n                                <Button type=\"submit\">Submit form</Button>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                <Col lg={6}>\n                    <FormValidationWithTooltip />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default FormValidation;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n"],"sourceRoot":""}