{"version":3,"sources":["pages/forms/Advanced.js","components/PageTitle.js","components/Datepicker.js"],"names":["ReactSelect","Body","className","rel","href","target","classNamePrefix","options","value","label","isMulti","Typeaheads","useState","singleSelections","setSingleSelections","multiSelections","setMultiSelections","id","labelKey","multiple","onChange","placeholder","selected","DatePickers","Date","selectedDate","setSelectedDate","onDateChange","date","lg","hideAddon","monthsShown","dateFormat","minDate","maxDate","setDate","getDate","showTimeSelect","timeFormat","tI","timeCaption","showTimeSelectOnly","InputMasks","mask","FormAdvanced","breadCrumbItems","path","active","title","PageTitle","props","listProps","Item","map","item","index","DatepickerInput","forwardRef","ref","type","onClick","console","log","DatepickerInputWithAddon","readOnly","HyperDatepicker","input","customInput","timeIntervals","classNames","inputClass","inline","autoComplete"],"mappings":"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","file":"static/js/116.744d516e.chunk.js","sourcesContent":["// @flow\nimport React, { useState } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport Select from 'react-select';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport MaskedInput from 'react-text-mask';\n\n// components\nimport PageTitle from '../../components/PageTitle';\nimport HyperDatepicker from '../../components/Datepicker';\n\nconst ReactSelect = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">\n                    <a rel=\"noreferrer\" href=\"https://github.com/JedWatson/react-select\" target=\"_blank\">\n                        React select\n                    </a>\n                </h4>\n                <p className=\"mb-1 mt-3 fw-bold text-muted\">Single Selection</p>\n                <p className=\"text-muted font-14\">React-Select based Select element</p>\n                <Select\n                    className=\"react-select\"\n                    classNamePrefix=\"react-select\"\n                    options={[\n                        { value: 'chocolate', label: 'Chocolate' },\n                        { value: 'strawberry', label: 'Strawberry' },\n                        { value: 'vanilla', label: 'Vanilla' },\n                    ]}></Select>\n\n                <p className=\"mb-1 mt-3 fw-bold text-muted\">Multiple Selection</p>\n                <p className=\"text-muted font-14\">React-Select based Select (Multiple) element</p>\n                <Select\n                    isMulti={true}\n                    options={[\n                        { value: 'chocolate', label: 'Chocolate' },\n                        { value: 'strawberry', label: 'Strawberry' },\n                        { value: 'vanilla', label: 'Vanilla' },\n                    ]}\n                    className=\"react-select\"\n                    classNamePrefix=\"react-select\"></Select>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Typeaheads = () => {\n    const [singleSelections, setSingleSelections] = useState([]);\n    const [multiSelections, setMultiSelections] = useState([]);\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">\n                    <a rel=\"noreferrer\" href=\"http://ericgio.github.io/react-bootstrap-typeahead/\" target=\"_blank\">\n                        Typeahead\n                    </a>\n                </h4>\n                <p className=\"mb-1 mt-3 fw-bold text-muted\">Single Selection</p>\n                <p className=\"text-muted font-14\">Typeahead based Select element</p>\n                <Typeahead\n                    id=\"select2\"\n                    labelKey=\"label\"\n                    multiple={false}\n                    onChange={setSingleSelections}\n                    options={[\n                        { id: 1, value: 'chocolate', label: 'Chocolate' },\n                        { id: 2, value: 'strawberry', label: 'Strawberry' },\n                        { id: 3, value: 'vanilla', label: 'Vanilla' },\n                    ]}\n                    placeholder=\"Choose a state...\"\n                    selected={singleSelections}\n                />\n\n                <p className=\"mb-1 mt-3 fw-bold text-muted\">Multiple Selection</p>\n                <p className=\"text-muted font-14\">Typeahead based Select (Multiple) element</p>\n                <Typeahead\n                    id=\"select3\"\n                    labelKey=\"label\"\n                    multiple\n                    onChange={setMultiSelections}\n                    options={[\n                        { id: 1, value: 'chocolate', label: 'Chocolate' },\n                        { id: 2, value: 'strawberry', label: 'Strawberry' },\n                        { id: 3, value: 'vanilla', label: 'Vanilla' },\n                    ]}\n                    placeholder=\"Choose a state...\"\n                    selected={multiSelections}\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst DatePickers = () => {\n    const [selectedDate, setSelectedDate] = useState(new Date());\n\n    /*\n     * handle date change\n     */\n    const onDateChange = (date) => {\n        if (date) {\n            setSelectedDate(date);\n        }\n    };\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Date &amp; Time Picker</h4>\n                <p className=\"text-muted font-14\">\n                    A simple date picker using{' '}\n                    <a rel=\"noreferrer\" href=\"https://reactdatepicker.com/\" target=\"_blank\">\n                        ReactJS Datepicker\n                    </a>\n                </p>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label>Single Date</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label>Single Date with multiple months</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                monthsShown={2}\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"form-label\">Custom date format</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                dateFormat=\"yyyy-MM-dd\"\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label>Specific date range</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                minDate={new Date()}\n                                maxDate={new Date(new Date().setDate(new Date().getDate() + 7))}\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label>Select Time</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                showTimeSelect\n                                timeFormat=\"HH:mm\"\n                                tI={60}\n                                dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                timeCaption=\"time\"\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label>Time only</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                tI={60}\n                                dateFormat=\"h:mm aa\"\n                                timeCaption=\"Time\"\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst InputMasks = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Input Masks</h4>\n                <p className=\"text-muted font-14\">\n                    Input masks by{' '}\n                    <a\n                        rel=\"noreferrer\"\n                        href=\"https://github.com/text-mask/text-mask/tree/master/react#readme\"\n                        target=\"_blank\">\n                        react-text-mask\n                    </a>\n                </p>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Phone Number with Area Code</label> <br />\n                            <MaskedInput\n                                mask={[\n                                    '(',\n                                    /[1-9]/,\n                                    /\\d/,\n                                    ')',\n                                    ' ',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    '-',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                ]}\n                                placeholder=\"(__) ____-____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>US Phone Number</label> <br />\n                            <MaskedInput\n                                mask={[\n                                    '(',\n                                    /[1-9]/,\n                                    /\\d/,\n                                    /\\d/,\n                                    ')',\n                                    ' ',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    '-',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                ]}\n                                placeholder=\"(___) ___-____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Date</label> <br />\n                            <MaskedInput\n                                mask={[/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]}\n                                placeholder=\"__/__/____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Time</label> <br />\n                            <MaskedInput\n                                mask={[/\\d/, /\\d/, ':', /\\d/, /\\d/, ':', /\\d/, /\\d/]}\n                                placeholder=\"__:__:__\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst FormAdvanced = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Forms', path: '/forms/advanced' },\n                    { label: 'Form Advanced', path: '/forms/advanced', active: true },\n                ]}\n                title={'Form Advanced'}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <ReactSelect />\n                </Col>\n                <Col lg={6}>\n                    <Typeaheads />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <DatePickers />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <InputMasks />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default FormAdvanced;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React, { forwardRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport classNames from 'classnames';\n\ntype DatepickerInputProps = {\n    onClick?: () => void,\n    value?: string,\n};\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef((props: DatepickerInputProps, ref) => {\n    const onDateValueChange = () => {\n        console.log('date value changed');\n    };\n    return (\n        <input\n            type=\"text\"\n            className=\"form-control date\"\n            onClick={props.onClick}\n            value={props.value}\n            onChange={onDateValueChange}\n            ref={ref}\n        />\n    );\n});\n\ntype DatepickerInputWithAddonProps = {\n    onClick?: () => void,\n    value?: string,\n};\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef((props: DatepickerInputWithAddonProps, ref) => (\n    <div className=\"input-group\" ref={ref}>\n        <input\n            type=\"text\"\n            className=\"form-control form-control-light\"\n            onClick={props.onClick}\n            value={props.value}\n            readOnly\n        />\n        <div className=\"input-group-append\">\n            <span className=\"input-group-text bg-primary border-primary text-white\">\n                <i className=\"mdi mdi-calendar-range font-13\"></i>\n            </span>\n        </div>\n    </div>\n));\n\ntype HyperDatepickerProps = {\n    value: Date,\n    onChange: (date: any) => void,\n    hideAddon?: boolean,\n    inputClass?: string,\n    dateFormat?: string,\n    minDate?: Date,\n    maxDate?: Date,\n    showTimeSelect?: boolean,\n    tI?: number,\n    timeCaption?: string,\n    showTimeSelectOnly?: boolean,\n    monthsShown?: number,\n    inline?: boolean,\n};\n\nconst HyperDatepicker = (props: HyperDatepickerProps): React$Element<any> => {\n    // handle custom input\n    const input = (props.hideAddon || false) === true ? <DatepickerInput /> : <DatepickerInputWithAddon />;\n\n    return (\n        <>\n            {/* date picker control */}\n            <DatePicker\n                customInput={input}\n                timeIntervals={props.tI}\n                className={classNames('form-control', props.inputClass)}\n                selected={props.value}\n                onChange={(date) => props.onChange(date)}\n                showTimeSelect={props.showTimeSelect}\n                timeFormat=\"hh:mm a\"\n                timeCaption={props.timeCaption}\n                dateFormat={props.dateFormat || 'MM/dd/yyyy'}\n                minDate={props.minDate}\n                maxDate={props.maxDate}\n                monthsShown={props.monthsShown}\n                showTimeSelectOnly={props.showTimeSelectOnly}\n                inline={props.inline}\n                autoComplete=\"off\"\n            />\n        </>\n    );\n};\n\nexport default HyperDatepicker;\n"],"sourceRoot":""}