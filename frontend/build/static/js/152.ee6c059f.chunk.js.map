{"version":3,"sources":["pages/apps/Ecommerce/Products.js"],"names":["columns","Header","accessor","sort","Cell","row","rating","original","emptyStars","src","image","alt","name","title","className","height","to","Array","map","x","i","classNames","status","classes","sizePerPageList","text","value","products","length","Products","breadCrumbItems","label","path","active","xs","Body","sm","variant","data","pageSize","isSortable","pagination","isSelectable","isSearchable","theadClass","searchBoxClass"],"mappings":"iOA8EMA,EAAU,CACZ,CACIC,OAAQ,UACRC,SAAU,OACVC,MAAM,EACNC,KArEc,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACfC,EAASD,EAAIE,SAASD,OACtBE,EAAaF,EAAS,EAAI,EAAIA,EAAS,EAC7C,OACI,qCACI,qBACIG,IAAKJ,EAAIE,SAASG,MAClBC,IAAKN,EAAIE,SAASK,KAClBC,MAAOR,EAAIE,SAASK,KACpBE,UAAU,eACVC,OAAO,OAEX,oBAAGD,UAAU,0CAAb,UACI,cAAC,IAAD,CAAME,GAAG,0BAA0BF,UAAU,YAA7C,SACKT,EAAIE,SAASK,OAElB,uBACC,YAAIK,MAAMX,IAASY,KAAI,SAACC,EAAGC,GAAJ,OACpB,sBAAcN,UAAU,6BAAbM,MAEd,YAAIH,MAAMT,IAAaU,KAAI,SAACC,EAAGC,GAAJ,OACxB,sBAAcN,UAAU,qCAAbM,cAkD3B,CACInB,OAAQ,WACRC,SAAU,WACVC,MAAM,GAEV,CACIF,OAAQ,aACRC,SAAU,aACVC,MAAM,GAEV,CACIF,OAAQ,QACRC,SAAU,QACVC,MAAM,GAEV,CACIF,OAAQ,WACRC,SAAU,WACVC,MAAM,GAEV,CACIF,OAAQ,SACRC,SAAU,SACVC,MAAM,EACNC,KAlEa,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACpB,OACI,mCACI,sBACIS,UAAWO,IAAW,QAAS,CAC3B,aAAchB,EAAIE,SAASe,OAC3B,aAAcjB,EAAIE,SAASe,SAHnC,SAKKjB,EAAIE,SAASe,OAAS,SAAW,oBA4D9C,CACIrB,OAAQ,SACRC,SAAU,SACVC,MAAM,EACNoB,QAAS,eACTnB,KA1Da,SAAC,GAAY,EAAVC,IACpB,OACI,qCACI,eAAC,IAAD,CAAMW,GAAG,IAAIF,UAAU,cAAvB,UACK,IACD,mBAAGA,UAAU,mBAEjB,eAAC,IAAD,CAAME,GAAG,IAAIF,UAAU,cAAvB,UACK,IACD,mBAAGA,UAAU,mCAEjB,eAAC,IAAD,CAAME,GAAG,IAAIF,UAAU,cAAvB,UACK,IACD,mBAAGA,UAAU,4BAkDvBU,EAAkB,CACpB,CACIC,KAAM,IACNC,MAAO,GAEX,CACID,KAAM,KACNC,MAAO,IAEX,CACID,KAAM,KACNC,MAAO,IAEX,CACID,KAAM,MACNC,MAAOC,IAASC,SAgETC,UA3DE,WACb,OACI,qCACI,cAAC,IAAD,CACIC,gBAAiB,CACb,CAAEC,MAAO,YAAaC,KAAM,4BAC5B,CAAED,MAAO,WAAYC,KAAM,2BAA4BC,QAAQ,IAEnEpB,MAAO,aAGX,cAAC,IAAD,UACI,cAAC,IAAD,CAAKqB,GAAI,GAAT,SACI,cAAC,IAAD,UACI,eAAC,IAAKC,KAAN,WACI,eAAC,IAAD,CAAKrB,UAAU,OAAf,UACI,cAAC,IAAD,CAAKsB,GAAI,EAAT,SACI,eAAC,IAAD,CAAMpB,GAAG,IAAIF,UAAU,sBAAvB,UACI,mBAAGA,UAAU,6BADjB,qBAKJ,cAAC,IAAD,CAAKsB,GAAI,EAAT,SACI,sBAAKtB,UAAU,cAAf,UACI,cAAC,IAAD,CAAQuB,QAAQ,UAAUvB,UAAU,YAApC,SACI,mBAAGA,UAAU,0BAGjB,cAAC,IAAD,CAAQuB,QAAQ,QAAQvB,UAAU,YAAlC,oBAIA,cAAC,IAAD,CAAQuB,QAAQ,QAAQvB,UAAU,OAAlC,4BAOZ,cAAC,IAAD,CACId,QAASA,EACTsC,KAAMX,IACNY,SAAU,EACVf,gBAAiBA,EACjBgB,YAAY,EACZC,YAAY,EACZC,cAAc,EACdC,cAAc,EACdC,WAAW,cACXC,eAAe","file":"static/js/152.ee6c059f.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// components\nimport PageTitle from '../../../components/PageTitle';\nimport Table from '../../../components/Table';\n\n// dummy data\nimport { products } from './Data';\n\n/* product column render */\nconst ProductColumn = ({ row }) => {\n    const rating = row.original.rating;\n    const emptyStars = rating < 5 ? 5 - rating : 0;\n    return (\n        <>\n            <img\n                src={row.original.image}\n                alt={row.original.name}\n                title={row.original.name}\n                className=\"rounded me-3\"\n                height=\"48\"\n            />\n            <p className=\"m-0 d-inline-block align-middle font-16\">\n                <Link to=\"/apps/ecommerce/details\" className=\"text-body\">\n                    {row.original.name}\n                </Link>\n                <br />\n                {[...Array(rating)].map((x, i) => (\n                    <span key={i} className=\"text-warning mdi mdi-star\"></span>\n                ))}\n                {[...Array(emptyStars)].map((x, i) => (\n                    <span key={i} className=\"text-warning mdi mdi-star-outline\"></span>\n                ))}\n            </p>\n        </>\n    );\n};\n\n/* status column render */\nconst StatusColumn = ({ row }) => {\n    return (\n        <>\n            <span\n                className={classNames('badge', {\n                    'bg-success': row.original.status,\n                    'bg-danger': !row.original.status,\n                })}>\n                {row.original.status ? 'Active' : 'Deactivated'}\n            </span>\n        </>\n    );\n};\n\n/* action column render */\nconst ActionColumn = ({ row }) => {\n    return (\n        <>\n            <Link to=\"#\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-eye\"></i>\n            </Link>\n            <Link to=\"#\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-square-edit-outline\"></i>\n            </Link>\n            <Link to=\"#\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-delete\"></i>\n            </Link>\n        </>\n    );\n};\n\n// get all columns\nconst columns = [\n    {\n        Header: 'Product',\n        accessor: 'name',\n        sort: true,\n        Cell: ProductColumn,\n    },\n    {\n        Header: 'Category',\n        accessor: 'category',\n        sort: true,\n    },\n    {\n        Header: 'Added Date',\n        accessor: 'added_date',\n        sort: true,\n    },\n    {\n        Header: 'Price',\n        accessor: 'price',\n        sort: true,\n    },\n    {\n        Header: 'Quantity',\n        accessor: 'quantity',\n        sort: true,\n    },\n    {\n        Header: 'Status',\n        accessor: 'status',\n        sort: true,\n        Cell: StatusColumn,\n    },\n    {\n        Header: 'Action',\n        accessor: 'action',\n        sort: false,\n        classes: 'table-action',\n        Cell: ActionColumn,\n    },\n];\n\n// get pagelist to display\nconst sizePerPageList = [\n    {\n        text: '5',\n        value: 5,\n    },\n    {\n        text: '10',\n        value: 10,\n    },\n    {\n        text: '20',\n        value: 20,\n    },\n    {\n        text: 'All',\n        value: products.length,\n    },\n];\n\n// main component\nconst Products = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'eCommerce', path: '/apps/ecommerce/products' },\n                    { label: 'Products', path: '/apps/ecommerce/products', active: true },\n                ]}\n                title={'Products'}\n            />\n\n            <Row>\n                <Col xs={12}>\n                    <Card>\n                        <Card.Body>\n                            <Row className=\"mb-2\">\n                                <Col sm={5}>\n                                    <Link to=\"#\" className=\"btn btn-danger mb-2\">\n                                        <i className=\"mdi mdi-plus-circle me-2\"></i> Add Products\n                                    </Link>\n                                </Col>\n\n                                <Col sm={7}>\n                                    <div className=\"text-sm-end\">\n                                        <Button variant=\"success\" className=\"mb-2 me-1\">\n                                            <i className=\"mdi mdi-cog-outline\"></i>\n                                        </Button>\n\n                                        <Button variant=\"light\" className=\"mb-2 me-1\">\n                                            Import\n                                        </Button>\n\n                                        <Button variant=\"light\" className=\"mb-2\">\n                                            Export\n                                        </Button>\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Table\n                                columns={columns}\n                                data={products}\n                                pageSize={5}\n                                sizePerPageList={sizePerPageList}\n                                isSortable={true}\n                                pagination={true}\n                                isSelectable={true}\n                                isSearchable={true}\n                                theadClass=\"table-light\"\n                                searchBoxClass=\"mb-2\"\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Products;\n"],"sourceRoot":""}