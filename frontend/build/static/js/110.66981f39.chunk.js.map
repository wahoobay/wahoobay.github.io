{"version":3,"sources":["components/PageTitle.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useTimeout.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useMounted.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useUpdateEffect.js","../node_modules/react-bootstrap/esm/CarouselCaption.js","../node_modules/react-bootstrap/esm/CarouselItem.js","../node_modules/react-bootstrap/esm/Carousel.js","pages/uikit/Carousel.js"],"names":["PageTitle","props","className","listProps","Item","href","breadCrumbItems","map","item","index","active","label","path","title","Row","React","ref","bsPrefix","as","Component","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName","BreadcrumbItem","children","linkAs","LinkComponent","Anchor","linkProps","target","prefix","undefined","defaultProps","Breadcrumb","Object","assign","useEventCallback","fn","useCommittedRef","useCallback","current","apply","arguments","value","useRef","useEffect","useWillUnmount","onUnmount","valueRef","useUpdatedRef","MAX_DELAY_MS","Math","pow","setChainedTimeout","handleRef","timeoutAtMs","delayMs","Date","now","setTimeout","useTimeout","isMounted","mounted","useMounted","clearTimeout","useMemo","clear","set","useUpdateEffect","deps","isFirst","createWithBsPrefix","CarouselItem","finalClassName","slide","fade","controls","indicators","indicatorLabels","defaultActiveIndex","interval","keyboard","pause","wrap","touch","prevIcon","prevLabel","nextIcon","nextLabel","Carousel","uncontrolledProps","useUncontrolled","activeIndex","onSelect","onSlide","onSlid","onKeyDown","onMouseOver","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","variant","isRTL","useIsRTL","nextDirectionRef","useState","direction","setDirection","paused","setPaused","isSliding","setIsSliding","renderedActiveIndex","setRenderedActiveIndex","activeChildInterval","numChildren","child","activeChildIntervalRef","prev","event","nextActiveIndex","next","elementRef","useImperativeHandle","element","nextWhenVisible","document","hidden","style","parentNode","elementStyle","getComputedStyle","display","visibility","isVisible","slideDirection","orderClassName","directionalClassName","handleEnter","node","triggerBrowserReflow","handleEntered","handleKeyDown","test","tagName","key","preventDefault","handleMouseOver","handleMouseOut","touchStartXRef","touchDeltaXRef","touchUnpauseTimeout","handleTouchStart","touches","clientX","handleTouchMove","length","handleTouchEnd","touchDeltaX","abs","shouldPlay","intervalHandleRef","_ref","_activeChildIntervalR","nextFunc","window","setInterval","visibilityState","clearInterval","indicatorOnClicks","Array","from","_","_jsxs","type","onClick","isActive","TransitionWrapper","in","onEnter","onEntered","addEndListener","transitionEndListener","status","innerProps","_Fragment","Caption","CarouselCaption","DefaultSlides","Body","src","alt","SlidesWithControls","SlidesWithIndicators","setIndex","selectedIndex","e","SlidesWithCaptions","CrossFade","IndividualInterval","Carousels","lg"],"mappings":"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","file":"static/js/110.66981f39.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import { useMemo, useRef } from 'react';\nimport useMounted from './useMounted';\nimport useWillUnmount from './useWillUnmount';\n/*\n * Browsers including Internet Explorer, Chrome, Safari, and Firefox store the\n * delay as a 32-bit signed integer internally. This causes an integer overflow\n * when using delays larger than 2,147,483,647 ms (about 24.8 days),\n * resulting in the timeout being executed immediately.\n *\n * via: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\n */\n\nvar MAX_DELAY_MS = Math.pow(2, 31) - 1;\n\nfunction setChainedTimeout(handleRef, fn, timeoutAtMs) {\n  var delayMs = timeoutAtMs - Date.now();\n  handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(function () {\n    return setChainedTimeout(handleRef, fn, timeoutAtMs);\n  }, MAX_DELAY_MS);\n}\n/**\n * Returns a controller object for setting a timeout that is properly cleaned up\n * once the component unmounts. New timeouts cancel and replace existing ones.\n *\n *\n *\n * ```tsx\n * const { set, clear } = useTimeout();\n * const [hello, showHello] = useState(false);\n * //Display hello after 5 seconds\n * set(() => showHello(true), 5000);\n * return (\n *   <div className=\"App\">\n *     {hello ? <h3>Hello</h3> : null}\n *   </div>\n * );\n * ```\n */\n\n\nexport default function useTimeout() {\n  var isMounted = useMounted(); // types are confused between node and web here IDK\n\n  var handleRef = useRef();\n  useWillUnmount(function () {\n    return clearTimeout(handleRef.current);\n  });\n  return useMemo(function () {\n    var clear = function clear() {\n      return clearTimeout(handleRef.current);\n    };\n\n    function set(fn, delayMs) {\n      if (delayMs === void 0) {\n        delayMs = 0;\n      }\n\n      if (!isMounted()) return;\n      clear();\n\n      if (delayMs <= MAX_DELAY_MS) {\n        // For simplicity, if the timeout is short, just set a normal timeout.\n        handleRef.current = setTimeout(fn, delayMs);\n      } else {\n        setChainedTimeout(handleRef, fn, Date.now() + delayMs);\n      }\n    }\n\n    return {\n      set: set,\n      clear: clear\n    };\n  }, []);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\n\nfunction useUpdateEffect(fn, deps) {\n  var isFirst = useRef(true);\n  useEffect(function () {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n\n    return fn();\n  }, deps);\n}\n\nexport default useUpdateEffect;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('carousel-caption');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  const finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'carousel-item'));\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: finalClassName\n  });\n});\nCarouselItem.displayName = 'CarouselItem';\nexport default CarouselItem;","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useUpdateEffect from '@restart/hooks/useUpdateEffect';\nimport useCommittedRef from '@restart/hooks/useCommittedRef';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Anchor from '@restart/ui/Anchor';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport CarouselCaption from './CarouselCaption';\nimport CarouselItem from './CarouselItem';\nimport { map, forEach } from './ElementChildren';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst SWIPE_THRESHOLD = 40;\nconst defaultProps = {\n  slide: true,\n  fade: false,\n  controls: true,\n  indicators: true,\n  indicatorLabels: [],\n  defaultActiveIndex: 0,\n  interval: 5000,\n  keyboard: true,\n  pause: 'hover',\n  wrap: true,\n  touch: true,\n  prevIcon: /*#__PURE__*/_jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"carousel-control-prev-icon\"\n  }),\n  prevLabel: 'Previous',\n  nextIcon: /*#__PURE__*/_jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"carousel-control-next-icon\"\n  }),\n  nextLabel: 'Next'\n};\n\nfunction isVisible(element) {\n  if (!element || !element.style || !element.parentNode || !element.parentNode.style) {\n    return false;\n  }\n\n  const elementStyle = getComputedStyle(element);\n  return elementStyle.display !== 'none' && elementStyle.visibility !== 'hidden' && getComputedStyle(element.parentNode).display !== 'none';\n}\n\nconst Carousel = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    bsPrefix,\n    slide,\n    fade,\n    controls,\n    indicators,\n    indicatorLabels,\n    activeIndex,\n    onSelect,\n    onSlide,\n    onSlid,\n    interval,\n    keyboard,\n    onKeyDown,\n    pause,\n    onMouseOver,\n    onMouseOut,\n    wrap,\n    touch,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    prevIcon,\n    prevLabel,\n    nextIcon,\n    nextLabel,\n    variant,\n    className,\n    children,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    activeIndex: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'carousel');\n  const isRTL = useIsRTL();\n  const nextDirectionRef = useRef(null);\n  const [direction, setDirection] = useState('next');\n  const [paused, setPaused] = useState(false);\n  const [isSliding, setIsSliding] = useState(false);\n  const [renderedActiveIndex, setRenderedActiveIndex] = useState(activeIndex || 0);\n\n  if (!isSliding && activeIndex !== renderedActiveIndex) {\n    if (nextDirectionRef.current) {\n      setDirection(nextDirectionRef.current);\n    } else {\n      setDirection((activeIndex || 0) > renderedActiveIndex ? 'next' : 'prev');\n    }\n\n    if (slide) {\n      setIsSliding(true);\n    }\n\n    setRenderedActiveIndex(activeIndex || 0);\n  }\n\n  useEffect(() => {\n    if (nextDirectionRef.current) {\n      nextDirectionRef.current = null;\n    }\n  });\n  let numChildren = 0;\n  let activeChildInterval; // Iterate to grab all of the children's interval values\n  // (and count them, too)\n\n  forEach(children, (child, index) => {\n    ++numChildren;\n\n    if (index === activeIndex) {\n      activeChildInterval = child.props.interval;\n    }\n  });\n  const activeChildIntervalRef = useCommittedRef(activeChildInterval);\n  const prev = useCallback(event => {\n    if (isSliding) {\n      return;\n    }\n\n    let nextActiveIndex = renderedActiveIndex - 1;\n\n    if (nextActiveIndex < 0) {\n      if (!wrap) {\n        return;\n      }\n\n      nextActiveIndex = numChildren - 1;\n    }\n\n    nextDirectionRef.current = 'prev';\n    onSelect == null ? void 0 : onSelect(nextActiveIndex, event);\n  }, [isSliding, renderedActiveIndex, onSelect, wrap, numChildren]); // This is used in the setInterval, so it should not invalidate.\n\n  const next = useEventCallback(event => {\n    if (isSliding) {\n      return;\n    }\n\n    let nextActiveIndex = renderedActiveIndex + 1;\n\n    if (nextActiveIndex >= numChildren) {\n      if (!wrap) {\n        return;\n      }\n\n      nextActiveIndex = 0;\n    }\n\n    nextDirectionRef.current = 'next';\n    onSelect == null ? void 0 : onSelect(nextActiveIndex, event);\n  });\n  const elementRef = useRef();\n  useImperativeHandle(ref, () => ({\n    element: elementRef.current,\n    prev,\n    next\n  })); // This is used in the setInterval, so it should not invalidate.\n\n  const nextWhenVisible = useEventCallback(() => {\n    if (!document.hidden && isVisible(elementRef.current)) {\n      if (isRTL) {\n        prev();\n      } else {\n        next();\n      }\n    }\n  });\n  const slideDirection = direction === 'next' ? 'start' : 'end';\n  useUpdateEffect(() => {\n    if (slide) {\n      // These callbacks will be handled by the <Transition> callbacks.\n      return;\n    }\n\n    onSlide == null ? void 0 : onSlide(renderedActiveIndex, slideDirection);\n    onSlid == null ? void 0 : onSlid(renderedActiveIndex, slideDirection);\n  }, [renderedActiveIndex]);\n  const orderClassName = `${prefix}-item-${direction}`;\n  const directionalClassName = `${prefix}-item-${slideDirection}`;\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    onSlide == null ? void 0 : onSlide(renderedActiveIndex, slideDirection);\n  }, [onSlide, renderedActiveIndex, slideDirection]);\n  const handleEntered = useCallback(() => {\n    setIsSliding(false);\n    onSlid == null ? void 0 : onSlid(renderedActiveIndex, slideDirection);\n  }, [onSlid, renderedActiveIndex, slideDirection]);\n  const handleKeyDown = useCallback(event => {\n    if (keyboard && !/input|textarea/i.test(event.target.tagName)) {\n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();\n\n          if (isRTL) {\n            next(event);\n          } else {\n            prev(event);\n          }\n\n          return;\n\n        case 'ArrowRight':\n          event.preventDefault();\n\n          if (isRTL) {\n            prev(event);\n          } else {\n            next(event);\n          }\n\n          return;\n\n        default:\n      }\n    }\n\n    onKeyDown == null ? void 0 : onKeyDown(event);\n  }, [keyboard, onKeyDown, prev, next, isRTL]);\n  const handleMouseOver = useCallback(event => {\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n\n    onMouseOver == null ? void 0 : onMouseOver(event);\n  }, [pause, onMouseOver]);\n  const handleMouseOut = useCallback(event => {\n    setPaused(false);\n    onMouseOut == null ? void 0 : onMouseOut(event);\n  }, [onMouseOut]);\n  const touchStartXRef = useRef(0);\n  const touchDeltaXRef = useRef(0);\n  const touchUnpauseTimeout = useTimeout();\n  const handleTouchStart = useCallback(event => {\n    touchStartXRef.current = event.touches[0].clientX;\n    touchDeltaXRef.current = 0;\n\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n\n    onTouchStart == null ? void 0 : onTouchStart(event);\n  }, [pause, onTouchStart]);\n  const handleTouchMove = useCallback(event => {\n    if (event.touches && event.touches.length > 1) {\n      touchDeltaXRef.current = 0;\n    } else {\n      touchDeltaXRef.current = event.touches[0].clientX - touchStartXRef.current;\n    }\n\n    onTouchMove == null ? void 0 : onTouchMove(event);\n  }, [onTouchMove]);\n  const handleTouchEnd = useCallback(event => {\n    if (touch) {\n      const touchDeltaX = touchDeltaXRef.current;\n\n      if (Math.abs(touchDeltaX) > SWIPE_THRESHOLD) {\n        if (touchDeltaX > 0) {\n          prev(event);\n        } else {\n          next(event);\n        }\n      }\n    }\n\n    if (pause === 'hover') {\n      touchUnpauseTimeout.set(() => {\n        setPaused(false);\n      }, interval || undefined);\n    }\n\n    onTouchEnd == null ? void 0 : onTouchEnd(event);\n  }, [touch, pause, prev, next, touchUnpauseTimeout, interval, onTouchEnd]);\n  const shouldPlay = interval != null && !paused && !isSliding;\n  const intervalHandleRef = useRef();\n  useEffect(() => {\n    var _ref, _activeChildIntervalR;\n\n    if (!shouldPlay) {\n      return undefined;\n    }\n\n    const nextFunc = isRTL ? prev : next;\n    intervalHandleRef.current = window.setInterval(document.visibilityState ? nextWhenVisible : nextFunc, (_ref = (_activeChildIntervalR = activeChildIntervalRef.current) != null ? _activeChildIntervalR : interval) != null ? _ref : undefined);\n    return () => {\n      if (intervalHandleRef.current !== null) {\n        clearInterval(intervalHandleRef.current);\n      }\n    };\n  }, [shouldPlay, prev, next, activeChildIntervalRef, interval, nextWhenVisible, isRTL]);\n  const indicatorOnClicks = useMemo(() => indicators && Array.from({\n    length: numChildren\n  }, (_, index) => event => {\n    onSelect == null ? void 0 : onSelect(index, event);\n  }), [indicators, numChildren, onSelect]);\n  return /*#__PURE__*/_jsxs(Component, {\n    ref: elementRef,\n    ...props,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    className: classNames(className, prefix, slide && 'slide', fade && `${prefix}-fade`, variant && `${prefix}-${variant}`),\n    children: [indicators && /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-indicators`,\n      children: map(children, (_, index) => /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        \"data-bs-target\": \"\" // Bootstrap requires this in their css.\n        ,\n        \"aria-label\": indicatorLabels != null && indicatorLabels.length ? indicatorLabels[index] : `Slide ${index + 1}`,\n        className: index === renderedActiveIndex ? 'active' : undefined,\n        onClick: indicatorOnClicks ? indicatorOnClicks[index] : undefined,\n        \"aria-current\": index === renderedActiveIndex\n      }, index))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-inner`,\n      children: map(children, (child, index) => {\n        const isActive = index === renderedActiveIndex;\n        return slide ? /*#__PURE__*/_jsx(TransitionWrapper, {\n          in: isActive,\n          onEnter: isActive ? handleEnter : undefined,\n          onEntered: isActive ? handleEntered : undefined,\n          addEndListener: transitionEndListener,\n          children: (status, innerProps) => /*#__PURE__*/React.cloneElement(child, { ...innerProps,\n            className: classNames(child.props.className, isActive && status !== 'entered' && orderClassName, (status === 'entered' || status === 'exiting') && 'active', (status === 'entering' || status === 'exiting') && directionalClassName)\n          })\n        }) : /*#__PURE__*/React.cloneElement(child, {\n          className: classNames(child.props.className, isActive && 'active')\n        });\n      })\n    }), controls && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [(wrap || activeIndex !== 0) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-prev`,\n        onClick: prev,\n        children: [prevIcon, prevLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: prevLabel\n        })]\n      }), (wrap || activeIndex !== numChildren - 1) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-next`,\n        onClick: next,\n        children: [nextIcon, nextLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: nextLabel\n        })]\n      })]\n    })]\n  });\n});\nCarousel.displayName = 'Carousel';\nCarousel.defaultProps = defaultProps;\nexport default Object.assign(Carousel, {\n  Caption: CarouselCaption,\n  Item: CarouselItem\n});","// @flow\nimport React, { useState } from 'react';\nimport { Row, Col, Card, Carousel } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst DefaultSlides = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Slides only</h4>\n                <p className=\"text-muted font-14\">\n                    Here’s a carousel with slides only. Note the presence of the <code>.d-block</code>\n                    and <code>.img-fluid</code> on carousel images to prevent browser default image alignment.\n                </p>\n\n                <Carousel indicators={false} controls={false}>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?sea\"\n                            alt=\"First slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?nature\"\n                            alt=\"Second slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?island\"\n                            alt=\"Third slide\"\n                        />\n                    </Carousel.Item>\n                </Carousel>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst SlidesWithControls = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">With controls</h4>\n                <p className=\"text-muted font-14\">Adding in the previous and next controls:</p>\n                <Carousel indicators={false}>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?sea\"\n                            alt=\"First slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?nature\"\n                            alt=\"Second slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?island\"\n                            alt=\"Third slide\"\n                        />\n                    </Carousel.Item>\n                </Carousel>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst SlidesWithIndicators = () => {\n    const [index, setIndex] = useState(0);\n\n    const handleSelect = (selectedIndex, e) => {\n        setIndex(selectedIndex);\n    };\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">With indicators</h4>\n                <p className=\"text-muted font-14\">\n                    You can also add the indicators to the carousel, alongside the controls, too.\n                </p>\n                <Carousel activeIndex={index} onSelect={handleSelect}>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?sea\"\n                            alt=\"First slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?nature\"\n                            alt=\"Second slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?island\"\n                            alt=\"Third slide\"\n                        />\n                    </Carousel.Item>\n                </Carousel>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst SlidesWithCaptions = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">With captions</h4>\n                <p className=\"text-muted font-14\">\n                    Add captions to your slides easily with the <code>.carousel-caption</code> element within any{' '}\n                    <code>.carousel-item</code>.\n                </p>\n                <Carousel indicators={false}>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?sea\"\n                            alt=\"First slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3>First slide label</h3>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?nature\"\n                            alt=\"Second slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3>Second slide label</h3>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?island\"\n                            alt=\"Third slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3>Third slide label</h3>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst CrossFade = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Crossfade</h4>\n                <p className=\"text-muted font-14\">\n                    Add <code>.carousel-fade</code> to your carousel to animate slides with a fade transition instead of\n                    a slide.\n                </p>\n                <Carousel fade indicators={false}>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?sea\"\n                            alt=\"First slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?nature\"\n                            alt=\"Second slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?island\"\n                            alt=\"Third slide\"\n                        />\n                    </Carousel.Item>\n                </Carousel>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst IndividualInterval = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Individual interval</h4>\n                <p className=\"text-muted font-14\">\n                    Add <code>data-bs-interval=\"\"</code> to a <code>.carousel-item</code> to change the amount of time\n                    to delay between automatically cycling to the next item.\n                </p>\n                <Carousel fade indicators={false}>\n                    <Carousel.Item interval={1000}>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?sea\"\n                            alt=\"First slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item interval={2000}>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?nature\"\n                            alt=\"Second slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?island\"\n                            alt=\"Third slide\"\n                        />\n                    </Carousel.Item>\n                </Carousel>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Carousels = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/carousel' },\n                    { label: 'Carousel', path: '/ui/carousel', active: true },\n                ]}\n                title={'Carousel'}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <DefaultSlides />\n                </Col>\n\n                <Col lg={6}>\n                    <SlidesWithControls />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <SlidesWithIndicators />\n                </Col>\n                <Col lg={6}>\n                    <SlidesWithCaptions />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <CrossFade />\n                </Col>\n                <Col lg={6}>\n                    <IndividualInterval />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Carousels;\n"],"sourceRoot":""}