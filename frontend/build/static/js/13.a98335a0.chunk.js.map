{"version":3,"sources":["../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/react-bootstrap/node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/hasClass.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/dom-helpers/esm/getComputedStyle.js","../node_modules/dom-helpers/esm/ownerWindow.js","../node_modules/dom-helpers/esm/hyphenate.js","../node_modules/dom-helpers/esm/hyphenateStyle.js","../node_modules/dom-helpers/esm/isTransform.js","../node_modules/dom-helpers/esm/css.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/react-bootstrap/node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/Modal.js"],"names":["Row","React","ref","bsPrefix","className","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName","fadeStyles","ENTERING","ENTERED","Fade","children","transitionClasses","handleEnter","useCallback","node","isAppearing","triggerBrowserReflow","onEnter","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","defaultProps","in","timeout","mountOnEnter","unmountOnExit","appear","useEventCallback","fn","useCommittedRef","current","apply","arguments","dataAttr","property","dataProp","value","useRef","useEffect","Context","createContext","canUseDOM","window","undefined","Provider","useWindow","useContext","propTypes","PropTypes","string","onClick","func","variant","oneOf","CloseButton","type","hasClass","element","classList","contains","baseVal","indexOf","resolveContainerRef","document","_ref","ownerDocument","body","nodeType","useWaitForDOMRef","onResolved","useState","resolvedRef","setRef","earlyRef","nextRef","ModalContext","onHide","getComputedStyle","psuedoElement","doc","defaultView","ownerWindow","rUpper","msPattern","hyphenateStyleName","replace","toLowerCase","hyphenate","supportedTransforms","style","css","transforms","getPropertyValue","Object","keys","key","test","isTransform","removeProperty","cssText","OPEN_DATA_ATTRIBUTE","ModalManager","handleContainerOverflow","isRTL","this","modals","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","_modal","containerState","overflow","paddingProp","container","getElement","scrollBarWidth","parseInt","setAttribute","m","remove","removeAttribute","assign","modal","modalIdx","length","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","AbstractModalHeader","closeLabel","closeVariant","closeButton","context","handleClick","_jsxs","toArray","Function","prototype","bind","call","slice","qsa","selector","querySelectorAll","replaceClassName","origClass","classToRemove","RegExp","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","add","marginProp","el","adjustAndStore","restore","getSharedManager","options","activeElement","active","nodeName","e","useWillUnmount","onUnmount","valueRef","useUpdatedRef","manager","_excluded","useModalManager","provided","modalManager","getManager","dialog","backdrop","isTopModal","setDialogRef","setBackdropRef","Modal","forwardRef","show","role","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onExit","onExited","onExiting","onEntering","onEntered","rest","source","excluded","i","target","sourceKeys","_objectWithoutPropertiesLoose","isMounted","useMounted","prevShow","usePrevious","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","tabIndex","backdropElement","BackdropTransition","_Fragment","ReactDOM","createPortal","Manager"],"mappings":"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","file":"static/js/13.a98335a0.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  ...props\n}, ref) => {\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    props.onEnter == null ? void 0 : props.onEnter(node, isAppearing);\n  }, [props]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\n\nexport default function useWindow() {\n  return useContext(Context);\n}","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  var _ref;\n\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import ownerWindow from './ownerWindow';\nexport default function getComputedStyle(node, psuedoElement) {\n  return ownerWindow(node).getComputedStyle(node, psuedoElement);\n}","import ownerDocument from './ownerDocument';\nexport default function ownerWindow(node) {\n  var doc = ownerDocument(node);\n  return doc && doc.defaultView || window;\n}","var rUpper = /([A-Z])/g;\nexport default function hyphenate(string) {\n  return string.replace(rUpper, '-$1').toLowerCase();\n}","/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js\n */\nimport hyphenate from './hyphenate';\nvar msPattern = /^ms-/;\nexport default function hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}","var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;\nexport default function isTransform(value) {\n  return !!(value && supportedTransforms.test(value));\n}","import getComputedStyle from './getComputedStyle';\nimport hyphenate from './hyphenateStyle';\nimport isTransform from './isTransform';\n\nfunction style(node, property) {\n  var css = '';\n  var transforms = '';\n\n  if (typeof property === 'string') {\n    return node.style.getPropertyValue(hyphenate(property)) || getComputedStyle(node).getPropertyValue(hyphenate(property));\n  }\n\n  Object.keys(property).forEach(function (key) {\n    var value = property[key];\n\n    if (!value && value !== 0) {\n      node.style.removeProperty(hyphenate(key));\n    } else if (isTransform(key)) {\n      transforms += key + \"(\" + value + \") \";\n    } else {\n      css += hyphenate(key) + \": \" + value + \";\";\n    }\n  });\n\n  if (transforms) {\n    css += \"transform: \" + transforms + \";\";\n  }\n\n  node.style.cssText += \";\" + css;\n}\n\nexport default style;","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import ownerDocument from './ownerDocument';\n/**\n * Return the actively focused element safely.\n *\n * @param doc the document to checl\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});"],"sourceRoot":""}