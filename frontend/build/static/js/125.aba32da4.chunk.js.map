{"version":3,"sources":["assets/images/small/fp1.jpg","assets/images/small/fp2.jpg","assets/images/small/fp3.jpg","assets/images/small/fpSmall1.jpg","assets/images/small/fpSmall2.jpg","assets/images/small/fpSmall3.jpg","pages/other/Starter.js","components/StatisticsChartWidget.js","components/StatisticsWidget.js"],"names":["DefaultSlides","Card","Body","className","Carousel","indicators","controls","Item","src","cardImg4","alt","cardImg5","cardImg6","SlidesWithCaptionsAndIndicaticators","useState","index","setIndex","activeIndex","onSelect","selectedIndex","e","cardImg1","Caption","cardImg2","cardImg3","LineChart","options","chart","height","type","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","grid","row","opacity","borderColor","markers","style","size","xaxis","categories","title","text","yaxis","min","max","legend","position","horizontalAlign","floating","offsetY","offsetX","responsive","breakpoint","series","name","data","Ribbon1","label","color","direction","classNames","to","CheckboxesandRadios","ListGroup","value","aria-label","Starter","Row","Col","sm","lg","StatisticsChartWidget","description","stats","trend","textClass","icon","StatisticsWidget","time","bgclassName","props","sparkline","plotOptions","bar","columnWidth","crosshairs","tooltip","fixed","x","y","formatter","seriesName","marker","bgClass"],"mappings":"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","file":"static/js/125.aba32da4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/fp1.d8e79d91.jpg\";","export default __webpack_public_path__ + \"static/media/fp2.6e368524.jpg\";","export default __webpack_public_path__ + \"static/media/fp3.0ac13e71.jpg\";","export default __webpack_public_path__ + \"static/media/fpSmall1.4a0734bb.jpg\";","export default __webpack_public_path__ + \"static/media/fpSmall2.2cbd5360.jpg\";","export default __webpack_public_path__ + \"static/media/fpSmall3.888a181f.jpg\";","// @flow\nimport React, { useState } from 'react';\nimport { Row, Col, Card, Carousel, ListGroup } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\n// components\nimport StatisticsWidget from '../../components/StatisticsWidget';\nimport StatisticsChartWidget from '../../components/StatisticsChartWidget';\n\n// images\nimport cardImg1 from '../../assets/images/small/fp1.jpg';\nimport cardImg2 from '../../assets/images/small/fp2.jpg';\nimport cardImg3 from '../../assets/images/small/fp3.jpg';\nimport cardImg4 from '../../assets/images/small/fpSmall1.jpg';\nimport cardImg5 from '../../assets/images/small/fpSmall2.jpg';\nimport cardImg6 from '../../assets/images/small/fpSmall3.jpg';\n\n\n\nconst DefaultSlides = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Historical Look</h4>\n                <p className=\"text-muted font-10\">\n                    &nbsp;\n                </p>\n\n                <Carousel indicators={false} controls={false}>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src={ cardImg4 }\n                            alt=\"First slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src={ cardImg5 }\n                            alt=\"Second slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src={ cardImg6 }\n                            alt=\"Third slide\"\n                        />\n                    </Carousel.Item>\n                </Carousel>\n            </Card.Body>\n        </Card>\n    );\n};\n\n\nconst SlidesWithCaptionsAndIndicaticators = () => {\n    const [index, setIndex] = useState(0);\n\n    const handleSelect = (selectedIndex, e) => {\n        setIndex(selectedIndex);\n    };\n    return (\n        <Card>\n            <Card.Body>\n                <Carousel indicators={true} activeIndex={index} onSelect={handleSelect}>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src={ cardImg1 }\n                            alt=\"First slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3>Live from underwater at Wahoo Bay</h3>\n                            <p>Get up close and personal with our marine ecosystem</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src={ cardImg2 }\n                            alt=\"Second slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3>Live from the North Shore</h3>\n                            <p>Live video from Wahoo Bay's Northern Shore</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src={ cardImg3 }\n                            alt=\"Third slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3>Live from the Pier</h3>\n                            <p>Live video from the pier at Wahoo Bay</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n                <br />\n                <h4 className=\"header-title\">Welcome to Wahoo Bay!</h4>\n                <p className=\"text-muted font-14\">\n                Wahoo Bay is envisioned to provide an immersive experience for park visitors, \n                especially young children. Its purpose is to raise awareness of the importance \n                of keeping our oceans and reefs healthy and thriving in an entertaining, \n                educational and memorable way.\n                </p>\n            </Card.Body>\n        </Card>\n    );\n};\n\n// simple line chart\nconst LineChart = (): React$Element<any> => {\n    // default options\n    const apexLineChartWithLables = {\n        chart: {\n            height: 380,\n            type: 'line',\n            zoom: {\n                enabled: false,\n            },\n            toolbar: {\n                show: false,\n            },\n        },\n        colors: ['#ff6633', '#0099ff'],\n        dataLabels: {\n            enabled: true,\n        },\n        stroke: {\n            width: [3, 3],\n            curve: 'smooth',\n        },\n        // title: {\n        //     text: 'Average High & Low Temperature',\n        //     align: 'left',\n        //     style: {\n        //         fontSize: '14px',\n        //     },\n        // },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f1f3fa',\n        },\n        markers: {\n            style: 'inverted',\n            size: 6,\n        },\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n            title: {\n                text: 'Month',\n            },\n        },\n        yaxis: {\n            title: {\n                text: 'Temperature',\n            },\n            min: 5,\n            max: 40,\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'right',\n            floating: true,\n            offsetY: -25,\n            offsetX: -5,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    // chart data\n    const apexLineChartWithLablesData = [\n        {\n            name: 'High - 2022',\n            data: [21, 26, 23, 27, 25, 28, 30],\n        },\n        {\n            name: 'Low - 2022',\n            data: [10, 13, 11, 16, 17, 19, 21],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Today's Weather</h4>\n                <p className=\"display-6\">24&deg;C \n                &nbsp;\n                \n                <i className=\"uil uil-thunderstorm-sun\"></i>\n                \n                <hr className=\"mt-1 mb-1\" />\n                \n                </p> \n                <Chart\n                    options={apexLineChartWithLables}\n                    series={apexLineChartWithLablesData}\n                    type=\"line\"\n                    className=\"apex-charts\"\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Ribbon1 = ({ label, color, direction }) => {\n    return (\n        <Card className=\"ribbon-box\">\n            <Card.Body>\n                <div\n                    className={classNames(\n                        'ribbon',\n                        'ribbon-' + color,\n                        { 'bg-dark text-light': color === 'dark' },\n                        direction === 'left' ? 'float-start' : 'float-end'\n                    )}>\n                    <i className=\"mdi mdi-access-point me-1\"></i> {label}\n                </div>\n                <h5 className={classNames('text-' + color, 'mt-0', direction === 'left' ? 'float-end' : 'float-start')}>\n                    {label} Wahoo Bay\n                </h5>\n                <div className=\"ribbon-content\">\n                    <p className=\"mb-0\">\n                        Read more about the immersive educational park experience \n                        and the importance of keeping our oceans and reefs healthy.\n                        <br /><br />\n                        <span className=\"h3\">\n                        <button className={classNames('btn', 'btn-sm', [`btn-${color}`])}>Get Involved</button>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        \n                        <Link to=\"#\"><i className=\"uil  uil-facebook\"></i></Link>&nbsp;\n                        <Link to=\"#\"><i className=\"uil  uil-twitter\"></i></Link>&nbsp;\n                        <Link to=\"#\"><i className=\"uil  uil-instagram\"></i></Link>&nbsp;\n                        </span>\n                    </p>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst CheckboxesandRadios = () => {\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">Education Portal</h4>\n                    <p className=\"text-muted font-14\">\n                        Learn about the many educational resources available right here on our webite.\n                    </p>\n\n                    <ListGroup>\n                        <ListGroup.Item>\n                            <input className=\"form-check-input me-1\" type=\"checkbox\" value=\"\" aria-label=\"...\" />\n                            Meet our native fish species\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <input className=\"form-check-input me-1\" type=\"checkbox\" value=\"\" aria-label=\"...\" />\n                            Oh, no! Coastal erosion!\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <input className=\"form-check-input me-1\" type=\"checkbox\" value=\"\" aria-label=\"...\" />\n                            Learn about water salinity\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <input className=\"form-check-input me-1\" type=\"checkbox\" value=\"\" aria-label=\"...\" />\n                            Coral reef dos and don'ts\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst Starter = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            \n            <br />\n            <Row>\n                <Col sm={8} lg={8}>\n                    <SlidesWithCaptionsAndIndicaticators />\n                </Col>\n                <Col sm={4} lg={4}>\n                \n                <LineChart />\n\n                <Ribbon1 label=\"About\" color=\"danger\" direction=\"right\" />\n\n                </Col>\n            </Row>\n            <Row>\n                {/* <Col sm={2} lg={2}>\n\n                    <StatisticsChartWidget\n                        description=\"Water Level\"\n                        title=\"Water Level\"\n                        stats=\"-2100\"\n                        trend={{\n                            textClass: 'text-success',\n                            icon: 'mdi mdi-arrow-up-bold',\n                            value: '3.27%',\n                        }}\n                        colors={['#727cf5']}\n                        data={[-1910, -2200, -2140, -2240, -2510, -2015, -1730, -2210, -2180, -1690, -2100]}></StatisticsChartWidget>\n                        \n                </Col> */}\n\n                <Col sm={4} lg={4}>\n\n                    <StatisticsChartWidget\n                        description=\"Barometer\"\n                        title=\"Barometer\"\n                        stats=\"1014.4\"\n                        trend={{\n                            textClass: 'text-success',\n                            icon: 'mdi mdi-arrow-up-bold',\n                            value: '3.2 hPa since yesterday',\n                        }}\n                        colors={['#727cf5']}\n                        type=\"line\"\n                        data={[1015.6, 1011.8, 1018.9, 1020.9, 1004.1, 1022.9, 1001.2, 1007.5, 1009.4, 1018.4, 1011.1]}></StatisticsChartWidget>\n                </Col>\n\n                <Col sm={2} lg={2}>\n\n                    <StatisticsChartWidget\n                        description=\"Water Level\"\n                        title=\"Water Level\"\n                        stats=\"-2100\"\n                        trend={{\n                            textClass: 'text-success',\n                            icon: 'mdi mdi-arrow-up-bold',\n                            value: '3.27%',\n                        }}\n                        colors={['#f4516c']}\n                        type=\"bar\"\n                        data={[-1910, -2200, -2140, -2240, -2510, -2015, -1730, -2210, -2180, -1690, -2100]}></StatisticsChartWidget>\n                        \n                </Col>\n\n                <Col sm={2} lg={2}>\n\n                    <StatisticsChartWidget\n                        description=\"Avg Wind Speed\"\n                        title=\"Wind Speed\"\n                        stats=\"3.2 m/s\"\n                        trend={{\n                            textClass: 'text-success',\n                            icon: 'mdi mdi-arrow-up-bold',\n                            value: '1.2 m/s',\n                        }}\n                        colors={['#34bfa3']}\n                        type=\"line\"\n                        data={[1.5, 2.8, 4.2, 3.4, 1.8, 2.3, 0.7, 1.6, 2.1, 4.9, 0.9]}></StatisticsChartWidget>\n                </Col>\n\n                <Col sm={4} lg={4}>\n                    <StatisticsWidget\n                        icon=\"uil-raindrops-alt bg-light-lighten rounded-circle text-white\"\n                        description=\"Rain Accumulation\"\n                        title=\"Rain Accumulation\"\n                        stats=\"18.51 cm\"\n                        trend={{\n                            textClass: 'badge bg-info',\n                            icon: 'mdi mdi-arrow-up-bold',\n                            value: '17.26%',\n                            time: 'since yesterday',\n                        }}\n                        bgclassName=\"bg-primary\"\n                        textClass=\"text-white\"></StatisticsWidget>\n                </Col>\n\n            </Row>\n\n\n            <Row>\n\n                <Col sm={4} lg={4}>\n\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Project Overview</h4>\n                            <p className=\"text-muted font-10\">\n                                &nbsp;\n                            </p>\n                            <div className=\"ratio ratio-16x9\">\n                                <iframe\n                                    src=\"https://www.youtube.com/embed/bcCbQQAq-2E?rel=0&amp;start&amp;end&amp;controls=1&amp;mute=0&amp;modestbranding=0&amp;autoplay=0\"\n                                    title=\"iframe\"></iframe>\n                            </div>\n                        </Card.Body>\n                    </Card>\n\n                </Col>\n                <Col sm={4} lg={4}>\n\n                    <CheckboxesandRadios />\n\n                </Col>\n                <Col sm={4} lg={4}>\n                    <DefaultSlides />\n                </Col>\n            </Row>\n\n\n\n\n\n        </>\n    );\n};\n\nexport default Starter;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport classNames from 'classnames';\n\ntype StatisticsChartWidgetProps = {\n    colors?: Array<string>,\n    type?: string,\n    name?: string,\n    data?: Array<number>,\n    textClass?: string,\n    bgClass?: string,\n    description?: string,\n    title?: string,\n    stats?: string,\n    trend: {\n        textClass: string,\n        icon: string,\n        value: string,\n    },\n};\n\nconst StatisticsChartWidget = (props: StatisticsChartWidgetProps): React$Element<any> => {\n    //  default options\n    const options = {\n        chart: {\n            sparkline: {\n                enabled: true,\n            },\n        },\n        plotOptions: {\n            bar: {\n                columnWidth: '60%',\n            },\n        },\n        xaxis: {\n            crosshairs: {\n                width: 1,\n            },\n        },\n        stroke: {\n            width: 2,\n            curve: 'smooth',\n        },\n        colors: props.colors || ['#008FFB'],\n        tooltip: {\n            fixed: {\n                enabled: false,\n            },\n            x: {\n                show: false,\n            },\n            y: {\n                title: {\n                    formatter: function (seriesName) {\n                        return '';\n                    },\n                },\n            },\n            marker: {\n                show: false,\n            },\n        },\n    };\n\n    // type - defaulted to bar\n    const type = props.type || 'bar';\n\n    // chart data\n    const series = [{ name: props.name || 'Data', data: props.data || [] }];\n\n    // textClass - defaulted to text-muted\n    const textClass = props.textClass || 'text-muted';\n\n    return (\n        <Card className={classNames('widget-flat', props.bgClass)}>\n            <Card.Body>\n                <Row className=\"align-items-center\">\n                    <Col className=\"col-6\">\n                        <h5\n                            className={classNames('fw-normal', 'mt-0', 'text-truncate', textClass)}\n                            title={props.description}>\n                            {props.title}\n                        </h5>\n                        <h3 className=\"my-2 py-1\">{props.stats}</h3>\n\n                        {props.trend && (\n                            <p className={classNames('mb-0', textClass)}>\n                                <span className={classNames(props.trend.textClass, 'me-2')}>\n                                    <i className={props.trend.icon}></i> {props.trend.value}\n                                </span>\n                            </p>\n                        )}\n                    </Col>\n\n                    <Col className=\"col-6\">\n                        <div className=\"text-end\">\n                            <Chart className=\"apex-charts\" options={options} series={series} type={type} height={60} />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StatisticsChartWidget;\n","// @flow\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport classNames from 'classnames';\n\ntype StatisticsWidgetProps = {\n    textClass?: string,\n    bgclassName?: string,\n    icon?: string,\n    title: string,\n    description: string,\n    stats?: string,\n    trend: {\n        textClass?: string,\n        icon?: string,\n        value?: string,\n        time?: string,\n    },\n};\n\n/**\n * Statistics widget\n */\nconst StatisticsWidget = (props: StatisticsWidgetProps): React$Element<any> => {\n    const textClass = props.textClass || 'text-muted';\n\n    return (\n        <Card className={classNames('widget-flat', props.bgclassName)}>\n            <Card.Body>\n                {props.icon && (\n                    <div className=\"float-end\">\n                        <i className={classNames(props.icon, 'widget-icon')}></i>\n                    </div>\n                )}\n                <h5 className={classNames('fw-normal', 'mt-0', textClass)} title={props.description}>\n                    {props.title}\n                </h5>\n                <h3 className={classNames('mt-3', 'mb-3', props.textClass ? props.textClass : null)}>{props.stats}</h3>\n\n                {props.trend && (\n                    <p className={classNames('mb-0', textClass)}>\n                        <span className={classNames(props.trend.textClass, 'me-2')}>\n                            <i className={classNames(props.trend.icon)}></i> {props.trend.value}\n                        </span>\n                        <span className=\"text-nowrap\">{props.trend.time}</span>\n                    </p>\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StatisticsWidget;\n"],"sourceRoot":""}