{"version":3,"sources":["pages/uikit/Offcanvas.js","components/PageTitle.js"],"names":["OffCanvasWithBackdrop","name","props","useState","show","setShow","toggle","prevState","variant","onClick","className","onHide","Header","closeButton","Title","Body","OffcanvasPlacement","DefaultOffcanvas","Offcanvases","breadCrumbItems","label","path","active","title","placement","map","option","index","scroll","backdrop","idx","PageTitle","listProps","Item","href","item"],"mappings":"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","file":"static/js/140.e1fd16af.chunk.js","sourcesContent":["// @flow\nimport React, { useState } from 'react';\nimport { Row, Col, Card, Offcanvas, Button } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst OffCanvasWithBackdrop = ({ name, ...props }) => {\n    const [show, setShow] = useState(false);\n\n    const toggle = () => {\n        setShow((prevState) => !prevState);\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={toggle} className=\"me-1\">\n                {name}\n            </Button>\n            <Offcanvas show={show} onHide={toggle} {...props}>\n                <Offcanvas.Header closeButton>\n                    <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    Some text as placeholder. In real life you can have the elements you have chosen. Like, text,\n                    images, lists, etc.\n                </Offcanvas.Body>\n            </Offcanvas>\n        </>\n    );\n};\n\nconst OffcanvasPlacement = ({ name, ...props }) => {\n    const [show, setShow] = useState(false);\n\n    const toggle = () => {\n        setShow((prevState) => !prevState);\n    };\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={toggle}>\n                Toggle {name} offcanvas\n            </Button>\n            <Offcanvas show={show} onHide={toggle} {...props}>\n                <Offcanvas.Header closeButton>\n                    <Offcanvas.Title>Offcanvas {name}</Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    Content for the offcanvas goes here. You can place just about any Bootstrap component or custom\n                    elements here.\n                </Offcanvas.Body>\n            </Offcanvas>\n        </>\n    );\n};\n\nconst DefaultOffcanvas = () => {\n    const [show, setShow] = useState(false);\n\n    const toggle = () => {\n        setShow((prevState) => !prevState);\n    };\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">Offcanvas</h4>\n                    <p className=\"text-muted font-13\">\n                        <code>Offcanvas</code> includes support for a header with a close button and an optional body\n                        class for some initial padding. We suggest that you include offcanvas headers with dismiss\n                        actions whenever possible, or provide an explicit dismiss action.\n                    </p>\n                    <Button variant=\"primary\" onClick={toggle}>\n                        Launch\n                    </Button>\n\n                    <Offcanvas show={show} onHide={toggle}>\n                        <Offcanvas.Header closeButton>\n                            <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n                        </Offcanvas.Header>\n                        <Offcanvas.Body>\n                            Some text as placeholder. In real life you can have the elements you have chosen. Like,\n                            text, images, lists, etc.\n                            <h5 className=\"mt-3\">List</h5>\n                            <ul className=\"ps-3\">\n                                <li className=\"\">Nemo enim ipsam voluptatem quia aspernatur</li>\n                                <li className=\"\">Neque porro quisquam est, qui dolorem</li>\n                                <li className=\"\">Quis autem vel eum iure qui in ea</li>\n                            </ul>\n                            <ul className=\"ps-3\">\n                                <li className=\"\">At vero eos et accusamus et iusto odio dignissimos</li>\n                                <li className=\"\">Et harum quidem rerum facilis</li>\n                                <li className=\"\">Temporibus autem quibusdam et aut officiis</li>\n                            </ul>\n                        </Offcanvas.Body>\n                    </Offcanvas>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst Offcanvases = (): React$Element<React$FragmentType> => {\n    const options = [\n        {\n            name: 'Enable body scrolling',\n            scroll: true,\n            backdrop: false,\n        },\n        {\n            name: 'Enable backdrop (default)',\n            scroll: false,\n            backdrop: true,\n        },\n        {\n            name: 'Enable both scrolling & backdrop',\n            scroll: true,\n            backdrop: true,\n        },\n    ];\n\n    const placementOptions = [\n        {\n            name: 'top',\n            placement: 'top',\n        },\n        {\n            name: 'right',\n            placement: 'end',\n        },\n        {\n            name: 'bottom',\n            placement: 'bottom',\n        },\n        {\n            name: 'left',\n            placement: 'start',\n        },\n    ];\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/offcanvas' },\n                    { label: 'Offcanvas', path: '/ui/offcanvas', active: true },\n                ]}\n                title={'Offcanvas'}\n            />\n\n            <Row>\n                <Col className=\"col-6\">\n                    <DefaultOffcanvas />\n\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Offcanvas Placement</h4>\n                            <p className=\"text-muted font-13\">Try the right and bottom examples out below.</p>\n                            <ul>\n                                <li>\n                                    <code>start</code> places offcanvas on the left of the viewport\n                                </li>\n                                <li>\n                                    <code>end</code> places offcanvas on the right of the viewport\n                                </li>\n                                <li>\n                                    <code>bottom</code> places offcanvas on the bottom of the viewport\n                                </li>\n                            </ul>\n                            <div className=\"button-list\">\n                                {placementOptions.map((option, index) => (\n                                    <OffcanvasPlacement key={index} placement={option.placement} name={option.name} />\n                                ))}\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                <Col className=\"col-6\">\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Offcanvas Backdrop</h4>\n                            <p className=\"text-muted font-13\">\n                                Scrolling the <code>&lt;body&gt;</code> element is disabled when an offcanvas and its\n                                backdrop are visible. Use the <code>scroll</code> prop to toggle{' '}\n                                <code>&lt;body&gt;</code> scrolling and <code>backdrop</code> prop to toggle the\n                                backdrop.\n                            </p>\n\n                            {options.map((props, idx) => (\n                                <OffCanvasWithBackdrop key={idx} {...props} />\n                            ))}\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Offcanvases;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n"],"sourceRoot":""}