{"version":3,"sources":["pages/uikit/Paginations.js","components/PageTitle.js"],"names":["DefaultPagination","items","number","push","Item","Body","className","Prev","Next","PaginationWithStates","disabled","active","RoundedPagination","PaginationSizes","size","PaginationWithEllipsis","First","Ellipsis","Last","Paginations","breadCrumbItems","label","path","title","xl","PageTitle","props","listProps","href","map","item","index"],"mappings":"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","file":"static/js/141.59bf6178.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Card, Pagination } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst DefaultPagination = () => {\n    let items = [];\n    for (let number = 1; number <= 5; number++) {\n        items.push(<Pagination.Item key={number}>{number}</Pagination.Item>);\n    }\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">Default Pagination</h4>\n                    <p className=\"text-muted font-14\">\n                        Simple pagination inspired by Rdio, great for apps and search results.\n                    </p>\n                    <Pagination>\n                        <Pagination.Prev />\n                        {items}\n                        <Pagination.Next />\n                    </Pagination>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst PaginationWithStates = () => {\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">Disabled and active states</h4>\n                    <p className=\"text-muted font-14\">\n                        PageItem are customizable for different circumstances. Use <code>disabled</code> prop for links\n                        that appear un-clickable and <code>active</code> prop to indicate the current page.\n                    </p>\n                    <Pagination>\n                        <Pagination.Prev disabled>Previous</Pagination.Prev>\n                        <Pagination.Item>{1}</Pagination.Item>\n                        <Pagination.Item active>{2}</Pagination.Item>\n                        <Pagination.Item>{3}</Pagination.Item>\n                        <Pagination.Next>Next</Pagination.Next>\n                    </Pagination>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst RoundedPagination = () => {\n    let items = [];\n    for (let number = 1; number <= 5; number++) {\n        items.push(\n            <Pagination.Item key={number} active={number === 2}>\n                {number}\n            </Pagination.Item>\n        );\n    }\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">Rounded Pagination</h4>\n                    <p className=\"text-muted font-14\">\n                        Add <code> .pagination-rounded</code> for rounded pagination.\n                    </p>\n                    <Pagination className=\"pagination-rounded\">\n                        <Pagination.Prev />\n                        {items}\n                        <Pagination.Next />\n                    </Pagination>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst PaginationSizes = () => {\n    let items = [];\n    for (let number = 1; number <= 3; number++) {\n        items.push(<Pagination.Item key={number}>{number}</Pagination.Item>);\n    }\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">Sizing</h4>\n                    <p className=\"text-muted font-14\">\n                        Add <code>lg</code> or <code>sm</code> type to <code>size</code> prop for additional sizes.\n                    </p>\n\n                    <Pagination size=\"lg\">\n                        <Pagination.Prev />\n                        {items}\n                        <Pagination.Next />\n                    </Pagination>\n\n                    <Pagination size=\"sm\">\n                        <Pagination.Prev />\n                        {items}\n                        <Pagination.Next />\n                    </Pagination>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst PaginationWithEllipsis = () => {\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">More options</h4>\n                    <p className=\"text-muted font-14\">\n                        For building more complex pagination UI, there are few convenient sub-components for adding\n                        \"First\", \"Previous\", \"Next\", and \"Last\" buttons, as well as an <code>Ellipsis</code> item for\n                        indicating previous or continuing results.\n                    </p>\n\n                    <Pagination>\n                        <Pagination.First />\n                        <Pagination.Prev />\n                        <Pagination.Item>{1}</Pagination.Item>\n                        <Pagination.Ellipsis />\n\n                        <Pagination.Item>{10}</Pagination.Item>\n                        <Pagination.Item>{11}</Pagination.Item>\n                        <Pagination.Item active>{12}</Pagination.Item>\n                        <Pagination.Item>{13}</Pagination.Item>\n                        <Pagination.Item disabled>{14}</Pagination.Item>\n\n                        <Pagination.Ellipsis />\n                        <Pagination.Item>{20}</Pagination.Item>\n                        <Pagination.Next />\n                        <Pagination.Last />\n                    </Pagination>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst Paginations = (): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/offcanvas' },\n                    { label: 'Paginations', path: '/ui/paginations', active: true },\n                ]}\n                title={'Paginations'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <DefaultPagination />\n                    <PaginationWithStates />\n                    <PaginationWithEllipsis />\n                </Col>\n                <Col xl={6}>\n                    <RoundedPagination />\n                    <PaginationSizes />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Paginations;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n"],"sourceRoot":""}