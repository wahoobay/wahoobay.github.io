{"version":3,"sources":["pages/maps/VectorMaps.js","components/PageTitle.js","components/VectorMap/BaseVectorMap.js","components/VectorMap/WorldMap.js","components/VectorMap/CanadaMap.js","components/VectorMap/RussiaMap.js","components/VectorMap/SpainMap.js","components/VectorMap/UsaVectorMap.js","components/VectorMap/ItalyVectorMap.js","components/VectorMap/IraqVectorMap.js"],"names":["VectorMaps","breadCrumbItems","label","path","active","title","Body","className","height","width","options","backgroundColor","regionStyle","initial","fill","markers","coords","name","markerStyle","r","stroke","hover","xl","zoomOnScroll","PageTitle","props","listProps","Item","href","map","item","index","BaseVectorMap","type","selectorId","Date","getTime","useState","setMap","useEffect","window","selector","id","style","WorldVectorMap","CanadaVectorMap","RussiaVectorMap","SpainVectorMap","UsaVectorMap","ItalyVectorMap","IraqVectorMap"],"mappings":"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","file":"static/js/119.5cade561.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\n// react plugin for creating vector maps\nimport { WorldVectorMap } from '../../components/VectorMap';\nimport { RussiaVectorMap } from '../../components/VectorMap';\nimport { SpainVectorMap } from '../../components/VectorMap';\nimport { CanadaVectorMap } from '../../components/VectorMap';\nimport { UsaVectorMap } from '../../components/VectorMap';\nimport { ItalyVectorMap } from '../../components/VectorMap';\nimport { IraqVectorMap } from '../../components/VectorMap';\n\nconst VectorMaps = (): React$Element<React$FragmentType> => {\n    // vector map config\n    const worldMapOptions = {\n        backgroundColor: 'transparent',\n        regionStyle: {\n            initial: {\n                fill: '#e3eaef',\n            },\n        },\n        markers: [\n            { coords: [41.9, 12.45], name: 'Vatican City' },\n            { coords: [43.73, 7.41], name: 'Monaco' },\n            { coords: [-0.52, 166.93], name: 'Nauru' },\n            { coords: [-8.51, 179.21], name: 'Tuvalu' },\n            { coords: [43.93, 12.46], name: 'San Marino' },\n            { coords: [47.14, 9.52], name: 'Liechtenstein' },\n            { coords: [7.11, 171.06], name: 'Marshall Islands' },\n            { coords: [17.3, -62.73], name: 'Saint Kitts and Nevis' },\n            { coords: [3.2, 73.22], name: 'Maldives' },\n            { coords: [35.88, 14.5], name: 'Malta' },\n            { coords: [12.05, -61.75], name: 'Grenada' },\n            { coords: [13.16, -61.23], name: 'Saint Vincent and the Grenadines' },\n            { coords: [13.16, -59.55], name: 'Barbados' },\n            { coords: [17.11, -61.85], name: 'Antigua and Barbuda' },\n            { coords: [-4.61, 55.45], name: 'Seychelles' },\n            { coords: [7.35, 134.46], name: 'Palau' },\n            { coords: [42.5, 1.51], name: 'Andorra' },\n            { coords: [14.01, -60.98], name: 'Saint Lucia' },\n            { coords: [6.91, 158.18], name: 'Federated States of Micronesia' },\n            { coords: [1.3, 103.8], name: 'Singapore' },\n            { coords: [0.33, 6.73], name: 'SÃ£o TomÃ© and PrÃncipe' },\n        ],\n        markerStyle: {\n            initial: {\n                r: 9,\n                fill: '#727cf5',\n                'fill-opacity': 0.9,\n                stroke: '#fff',\n                'stroke-width': 7,\n                'stroke-opacity': 0.4,\n            },\n            hover: {\n                fill: '#727cf5',\n                stroke: '#fff',\n                'fill-opacity': 1,\n                'stroke-width': 1.5,\n            },\n        },\n    };\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Maps', path: '/ui/vectormaps' },\n                    { label: 'Vector Maps', path: '/ui/vectormaps', active: true },\n                ]}\n                title={'Vector Maps'}\n            />\n\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">World Vector Map</h4>\n                            <WorldVectorMap height=\"360px\" width=\"100%\" options={worldMapOptions} />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Russia Vector Map</h4>\n                            <RussiaVectorMap\n                                height=\"300px\"\n                                width=\"100%\"\n                                options={{\n                                    zoomOnScroll: false,\n                                    regionStyle: {\n                                        initial: {\n                                            fill: '#727cf5',\n                                        },\n                                    },\n                                }}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Spain Vector Map</h4>\n                            <SpainVectorMap\n                                height=\"300px\"\n                                width=\"100%\"\n                                options={{\n                                    zoomOnScroll: false,\n                                    backgroundColor: 'transparent',\n                                    regionStyle: {\n                                        initial: {\n                                            fill: '#6c757d',\n                                        },\n                                    },\n                                }}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Canada Vector Map</h4>\n                            <CanadaVectorMap\n                                height=\"300px\"\n                                width=\"100%\"\n                                options={{\n                                    zoomOnScroll: false,\n                                    backgroundColor: 'transparent',\n                                    regionStyle: {\n                                        initial: {\n                                            fill: '#0acf97',\n                                        },\n                                    },\n                                }}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">USA Vector Map</h4>\n                            <UsaVectorMap\n                                height=\"300px\"\n                                width=\"100%\"\n                                options={{\n                                    zoomOnScroll: false,\n                                    backgroundColor: 'transparent',\n                                    regionStyle: {\n                                        initial: {\n                                            fill: '#39afd1',\n                                        },\n                                    },\n                                }}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Italy Vector Map</h4>\n                            <ItalyVectorMap\n                                height=\"300px\"\n                                width=\"100%\"\n                                options={{\n                                    zoomOnScroll: false,\n                                    backgroundColor: 'transparent',\n                                    regionStyle: {\n                                        initial: {\n                                            fill: '#fa5c7c',\n                                        },\n                                    },\n                                }}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Iraq Vector Map</h4>\n                            <IraqVectorMap\n                                height=\"300px\"\n                                width=\"100%\"\n                                options={{\n                                    zoomOnScroll: false,\n                                    backgroundColor: 'transparent',\n                                    regionStyle: {\n                                        initial: {\n                                            fill: '#ffbc00',\n                                        },\n                                    },\n                                }}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default VectorMaps;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React, { useEffect, useState } from 'react';\n\ntype BaseVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n    type: string,\n};\n\nconst BaseVectorMap = ({ width, height, options, type }: BaseVectorMapProps): React$Element<React$FragmentType> => {\n    const selectorId = type + new Date().getTime();\n    const [map, setMap] = useState();\n\n    useEffect(() => {\n        if (!map) {\n            // create jsvectormap\n            const map = new window['jsVectorMap']({\n                selector: '#' + selectorId,\n                map: type,\n                ...options,\n            });\n\n            setMap(map);\n        }\n    }, [selectorId, map, options, type]);\n    return (\n        <>\n            <div id={selectorId} style={{ width: width, height: height }}></div>\n        </>\n    );\n};\n\nexport default BaseVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/world.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype WorldVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst WorldVectorMap = ({ width, height, options }: WorldVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"world\" />\n        </>\n    );\n};\n\nexport default WorldVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/canada.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype CanadaVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst CanadaVectorMap = ({ width, height, options }: CanadaVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"canada\" />\n        </>\n    );\n};\n\nexport default CanadaVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/russia.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype RussiaVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst RussiaVectorMap = ({ width, height, options }: RussiaVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"russia\" />\n        </>\n    );\n};\n\nexport default RussiaVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/spain.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype SpainVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst SpainVectorMap = ({ width, height, options }: SpainVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"spain\" />\n        </>\n    );\n};\n\nexport default SpainVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/us-merc-en.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype UsaVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst UsaVectorMap = ({ width, height, options }: UsaVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"us_merc_en\" />\n        </>\n    );\n};\n\nexport default UsaVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/italy.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype ItalyVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst ItalyVectorMap = ({ width, height, options }: ItalyVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"italy\" />\n        </>\n    );\n};\n\nexport default ItalyVectorMap;\n","// @flow\nimport React from 'react';\nimport 'jsvectormap';\nimport 'jsvectormap/dist/maps/iraq.js';\n\n//components\nimport BaseVectorMap from './BaseVectorMap';\n\ntype IraqVectorMapProps = {\n    width?: string,\n    height?: string,\n    options?: any,\n};\n\nconst IraqVectorMap = ({ width, height, options }: IraqVectorMapProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <BaseVectorMap width={width} height={height} options={options} type=\"iraq\" />\n        </>\n    );\n};\n\nexport default IraqVectorMap;\n"],"sourceRoot":""}