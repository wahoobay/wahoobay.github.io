"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.Default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _MenuItem = _interopRequireDefault(require("./MenuItem"));

var _Context = require("../../core/Context");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var _default = {
  title: 'Components/MenuItem/MenuItem',
  component: _MenuItem["default"]
};
exports["default"] = _default;

var value = _objectSpread(_objectSpread({}, _Context.defaultContext), {}, {
  id: 'test-id'
});

var Template = function Template(_ref) {
  var context = _ref.context,
      props = _ref.props;
  return /*#__PURE__*/_react["default"].createElement(_Context.TypeaheadContext.Provider, {
    value: _objectSpread(_objectSpread({}, value), context)
  }, /*#__PURE__*/_react["default"].createElement(_MenuItem["default"], props));
};

var Default = Template.bind({});
exports.Default = Default;
Default.args = {
  props: {
    children: 'This is a menu item',
    label: 'test label',
    option: '',
    position: 0
  }
};