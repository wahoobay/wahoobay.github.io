"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.WithHint = exports.Valid = exports.Small = exports.Large = exports.Invalid = exports.Disabled = exports.Default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _TypeaheadInputSingle = _interopRequireDefault(require("./TypeaheadInputSingle"));

var _helpers = require("../../tests/helpers");

var _excluded = ["hintText"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var _default = {
  title: 'Components/TypeaheadInputSingle',
  component: _TypeaheadInputSingle["default"]
};
exports["default"] = _default;

var Template = function Template(_ref) {
  var _ref$hintText = _ref.hintText,
      hintText = _ref$hintText === void 0 ? '' : _ref$hintText,
      args = (0, _objectWithoutProperties2["default"])(_ref, _excluded);

  var _useState = (0, _react.useState)(null),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      inputNode = _useState2[0],
      setInputNode = _useState2[1];

  return /*#__PURE__*/_react["default"].createElement(_helpers.HintProvider, {
    hintText: hintText,
    inputNode: inputNode
  }, /*#__PURE__*/_react["default"].createElement(_TypeaheadInputSingle["default"], (0, _extends2["default"])({}, args, {
    inputRef: setInputNode,
    referenceElementRef: _helpers.noop
  })));
};

var Default = Template.bind({});
exports.Default = Default;
Default.args = {
  placeholder: 'This is a default input...'
};
var Disabled = Template.bind({});
exports.Disabled = Disabled;
Disabled.args = {
  disabled: true,
  placeholder: 'This is a disabled input...'
};
var Small = Template.bind({});
exports.Small = Small;
Small.args = {
  placeholder: 'This is a small input...',
  size: 'sm'
};
var Large = Template.bind({});
exports.Large = Large;
Large.args = {
  placeholder: 'This is a large input...',
  size: 'lg'
};
var Valid = Template.bind({});
exports.Valid = Valid;
Valid.args = {
  placeholder: 'This is a valid input...',
  isValid: true
};
var Invalid = Template.bind({});
exports.Invalid = Invalid;
Invalid.args = {
  placeholder: 'This is an invalid input...',
  isInvalid: true
};
var WithHint = Template.bind({});
exports.WithHint = WithHint;
WithHint.args = {
  hintText: 'California',
  onChange: _helpers.noop,
  value: 'Ca'
};