"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

var _react = _interopRequireDefault(require("react"));

var stories = _interopRequireWildcard(require("./TypeaheadMenu.stories"));

var _helpers = require("../../tests/helpers");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var _composeStories = (0, _helpers.composeStories)(stories),
    CustomChildren = _composeStories.CustomChildren,
    CustomOption = _composeStories.CustomOption,
    Pagination = _composeStories.Pagination;

describe('<TypeaheadMenu>', function () {
  (0, _helpers.generateSnapshots)(stories);
  it('renders a custom option', function () {
    (0, _helpers.render)( /*#__PURE__*/_react["default"].createElement(CustomOption, null));
    expect(_helpers.screen.getByRole('option')).toHaveTextContent('New selection:');
  });
  it('renders custom new selection text', function () {
    (0, _helpers.render)( /*#__PURE__*/_react["default"].createElement(CustomOption, {
      newSelectionPrefix: "Select new: "
    }));
    expect(_helpers.screen.getByRole('option')).toHaveTextContent('Select new:');
  });
  it('renders a pagination item', function () {
    (0, _helpers.render)( /*#__PURE__*/_react["default"].createElement(Pagination, null));

    var paginationItem = _helpers.screen.queryByRole('option', {
      name: 'Display additional results...'
    });

    expect(paginationItem).toBeInTheDocument();
  });
  it('renders a custom pagination label', function () {
    var paginationText = 'Show more...';
    (0, _helpers.render)( /*#__PURE__*/_react["default"].createElement(Pagination, {
      paginationText: paginationText
    }));
    expect(_helpers.screen.queryByRole('option', {
      name: paginationText
    })).toBeInTheDocument();
  });
  it('renders a custom pagination label component', function () {
    var paginationText = /*#__PURE__*/_react["default"].createElement("div", null, "Show more...");

    (0, _helpers.render)( /*#__PURE__*/_react["default"].createElement(Pagination, {
      paginationText: paginationText
    }));

    var item = _helpers.screen.queryByRole('option', {
      name: 'Show more...'
    });

    expect(item).toBeInTheDocument();
    expect(item).toHaveAttribute('aria-label', '');
  });
  it('does not show a paginator when there are no results', function () {
    (0, _helpers.render)( /*#__PURE__*/_react["default"].createElement(Pagination, {
      options: []
    }));
    expect(_helpers.screen.queryByRole('option', {
      name: 'Display additional results...'
    })).not.toBeInTheDocument();
  });
  it('renders custom menu item children', function () {
    (0, _helpers.render)( /*#__PURE__*/_react["default"].createElement(CustomChildren, null));
    expect(_helpers.screen.getAllByRole('option')[0]).toHaveTextContent('Population');
  });
});