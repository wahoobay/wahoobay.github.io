"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

var _react = _interopRequireDefault(require("react"));

var stories = _interopRequireWildcard(require("./Loader.stories"));

var _helpers = require("../../tests/helpers");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var _composeStories = (0, _helpers.composeStories)(stories),
    Default = _composeStories.Default;

describe('<Loader>', function () {
  (0, _helpers.generateSnapshots)(stories);
  it('renders a loading indicator', function () {
    (0, _helpers.render)( /*#__PURE__*/_react["default"].createElement(Default, null));
    expect(_helpers.screen.getByRole('status')).toHaveClass('rbt-loader spinner-border spinner-border-sm');
    expect(_helpers.screen.getByText('Loading...')).toBeTruthy();
  });
  it('renders a custom label for accessibility', function () {
    (0, _helpers.render)( /*#__PURE__*/_react["default"].createElement(Default, {
      label: "Waiting..."
    }));
    expect(_helpers.screen.getByText('Waiting...')).toBeTruthy();
  });
});