"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _range = _interopRequireDefault(require("lodash/range"));

var _stripDiacritics = _interopRequireDefault(require("./stripDiacritics"));

/* eslint-disable import/no-extraneous-dependencies */
describe('stripDiacritics', function () {
  it('removes accents and other diacritical marks from a string', function () {
    var string = 'ÆÐƎƐŒẞæǝɛœſßĄƁÇĐƊĘĦĮƘŁØƠŞȘŢȚŦŲƯƳąɓçđɗęħįƙłøơşșţțŧųưƴÁÀÂÄǍĂĀÃÅǺĄÆǼǢƁĆĊĈČÇĎḌĐƊÐÉÈĖÊËĚĔĒĘẸƎƐĠĜǦĞĢáàâäǎăāãåǻąæǽǣɓćċĉčçďḍđɗéèėêëěĕēęẹġĝǧğģĤḤĦIÍÌİÎÏǏĬĪĨĮỊĴĶƘĹĻŁĽĿNŃŇÑŅÓÒÔÖǑŎŌÕŐỌØǾƠŒĥḥħıíìiîïǐĭīĩįịĵķƙĸĺļłľŀŉńňñņóòôöǒŏōõőọøǿơœŔŘŖŚŜŠŞȘṢẞŤŢṬŦÚÙÛÜǓŬŪŨŰŮŲỤƯẂẀŴẄÝỲŶŸȲỸƳŹŻŽẒŕřŗſśŝšşșṣßťţṭŧúùûüǔŭūũűůųụưẃẁŵẅýỳŷÿȳỹƴźżžẓ';
    var result = 'AEDEEOESaeeeoelsABCDDEHIKLOOSSTTTUUYabcddehikloosstttuuyAAAAAAAAAAAAEAEAEBCCCCCDDDDDEEEEEEEEEEEEGGGGGaaaaaaaaaaaaeaeaebcccccddddeeeeeeeeeegggggHHHIIIIIIIIIIIIJKKLLLLLNNNNNOOOOOOOOOOOOOOEhhhiiiiiiiiiiiijkkĸlllllnnnnnooooooooooooooeRRRSSSSSSSTTTTUUUUUUUUUUUUUWWWWYYYYYYYZZZZrrrlsssssssttttuuuuuuuuuuuuuwwwwyyyyyyyzzzz';
    expect((0, _stripDiacritics["default"])(string)).toBe(result);
  });
  it('works for non-latin alphabets', function () {
    var string = 'ΆΈΉΊΪΌΎΫΏάέίϊΐόύϋΰ';
    var result = 'ΑΕΗΙΙΟΥΥΩαειιιουυυ';
    expect((0, _stripDiacritics["default"])(string)).toBe(result);
  });
  it('removes combining diacritical marks from a string', function () {
    var alphaRange = ['a', 'b', 'c', 'd', 'e', 'f'];
    var numRange = (0, _range["default"])(30, 37);
    var arr = [];
    numRange.forEach(function (n) {
      alphaRange.forEach(function (a) {
        arr.push(n + a);
      });
    }); // Build up a string of every unicode combining mark (\u0300-\u036F).

    var str = arr.concat((0, _range["default"])(300, 370)).map(function (n) {
      return String.fromCharCode("0x0".concat(n));
    }).join('');
    expect(str.length).toBe(112);
    expect((0, _stripDiacritics["default"])(str)).toBe('');
  });
});