import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/* eslint-disable sort-keys,import/no-extraneous-dependencies */
import React from 'react';
import TypeaheadMenu from './TypeaheadMenu';
import options from '../../tests/data';
import { getOptionProperty } from '../../utils';
export default {
  title: 'Components/TypeaheadMenu',
  component: TypeaheadMenu
};
var defaultProps = {
  id: 'typeahead-menu',
  labelKey: 'name',
  options: options,
  text: ''
};

var Template = function Template(args) {
  return /*#__PURE__*/React.createElement("div", {
    style: {
      minHeight: '300px'
    }
  }, /*#__PURE__*/React.createElement("div", {
    style: {
      position: 'relative'
    }
  }, /*#__PURE__*/React.createElement(TypeaheadMenu, args)));
};

export var Default = Template.bind({});
Default.args = _objectSpread({}, defaultProps);
export var CustomOption = Template.bind({});
CustomOption.args = _objectSpread(_objectSpread({}, defaultProps), {}, {
  options: [{
    customOption: true,
    name: 'custom option'
  }],
  text: 'custom option'
});
export var Pagination = Template.bind({});
Pagination.args = _objectSpread(_objectSpread({}, defaultProps), {}, {
  options: [].concat(_toConsumableArray(options.slice(0, 5)), [{
    paginationOption: true
  }])
});
export var CustomChildren = Template.bind({});
CustomChildren.args = _objectSpread(_objectSpread({}, defaultProps), {}, {
  renderMenuItemChildren: function renderMenuItemChildren(option) {
    var name = getOptionProperty(option, 'name');
    var population = getOptionProperty(option, 'population');
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", null, name), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("small", null, "Population: ", population.toLocaleString())));
  }
});