import React from 'react';
import * as stories from './Menu.stories';
import { composeStories, fireEvent, getItems, getMenu, generateSnapshots, render, screen } from '../../tests/helpers';

var _composeStories = composeStories(stories),
    Default = _composeStories.Default,
    Empty = _composeStories.Empty,
    HeaderAndDivider = _composeStories.HeaderAndDivider;

describe('<Menu>', function () {
  generateSnapshots(stories);
  it('renders a basic menu with menu items', function () {
    render( /*#__PURE__*/React.createElement(Default, null));
    expect(getMenu()).toHaveClass('rbt-menu dropdown-menu');
    expect(getItems()).toHaveLength(3);
  });
  it('sets the maxHeight and other styles', function () {
    render( /*#__PURE__*/React.createElement(Default, {
      maxHeight: "100px",
      style: {
        backgroundColor: 'red'
      }
    }));
    var menu = getMenu();
    expect(menu).toHaveStyle('background-color: red');
    expect(menu).toHaveStyle('max-height: 100px');
  });
  it('renders an empty label when there are no children', function () {
    var emptyLabel = 'No matches.';
    render( /*#__PURE__*/React.createElement(Empty, {
      emptyLabel: emptyLabel
    }));
    var items = getItems();
    expect(items).toHaveLength(1);
    expect(items[0]).toHaveClass('disabled');
    expect(items[0]).toHaveTextContent(emptyLabel);
  });
  it('adds an aria-label attribute to the menu', function () {
    render( /*#__PURE__*/React.createElement(Default, {
      "aria-label": "custom-label"
    }));
    expect(getMenu()).toHaveAttribute('aria-label', 'custom-label');
  });
  it('updates the menu position if the input height changes', function () {
    var scheduleUpdate = jest.fn();

    var _render = render( /*#__PURE__*/React.createElement(Default, {
      scheduleUpdate: scheduleUpdate
    })),
        rerender = _render.rerender;

    expect(scheduleUpdate).toHaveBeenCalledTimes(0);
    rerender( /*#__PURE__*/React.createElement(Default, {
      inputHeight: 1,
      scheduleUpdate: scheduleUpdate
    }));
    expect(scheduleUpdate).toHaveBeenCalledTimes(1);
  });
  it('prevents the input from blurring on mousedown', function () {
    render( /*#__PURE__*/React.createElement(Default, null)); // `false` means e.preventDefault was called.

    expect(fireEvent.mouseDown(getMenu())).toBe(false);
  });
  it('checks the menu header and divider', function () {
    render( /*#__PURE__*/React.createElement(HeaderAndDivider, null));
    var header = screen.getByRole('heading');
    expect(header.tagName).toBe('DIV');
    expect(header).toHaveClass('dropdown-header');
    expect(header).toHaveTextContent('This is a menu header');
    var divider = screen.getByRole('separator');
    expect(divider.tagName).toBe('DIV');
    expect(divider).toHaveClass('dropdown-divider');
  });
});