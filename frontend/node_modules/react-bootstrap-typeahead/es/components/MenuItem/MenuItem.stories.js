import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/* eslint-disable sort-keys,import/no-extraneous-dependencies */
import React from 'react';
import MenuItem from './MenuItem';
import { defaultContext, TypeaheadContext } from '../../core/Context';
export default {
  title: 'Components/MenuItem/MenuItem',
  component: MenuItem
};

var value = _objectSpread(_objectSpread({}, defaultContext), {}, {
  id: 'test-id'
});

var Template = function Template(_ref) {
  var context = _ref.context,
      props = _ref.props;
  return /*#__PURE__*/React.createElement(TypeaheadContext.Provider, {
    value: _objectSpread(_objectSpread({}, value), context)
  }, /*#__PURE__*/React.createElement(MenuItem, props));
};

export var Default = Template.bind({});
Default.args = {
  props: {
    children: 'This is a menu item',
    label: 'test label',
    option: '',
    position: 0
  }
};