import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
var _excluded = ["children"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import _regeneratorRuntime from "@babel/runtime/regenerator";

/* eslint-disable import/no-extraneous-dependencies */

/* istanbul ignore file */
import { axe } from 'jest-axe';
import React from 'react';
import renderer from 'react-test-renderer';
import { composeStories } from '@storybook/testing-react';
import { screen } from '@testing-library/react';
import { defaultContext, TypeaheadContext } from '../core/Context';
export { axe };
export * from '@storybook/testing-react';
export * from '@testing-library/react';
export { default as userEvent } from '@testing-library/user-event'; // eslint-disable-next-line @typescript-eslint/no-empty-function

export function noop() {}
export function prepareSnapshot(element) {
  return renderer.create(element).toJSON();
}
export function generateSnapshots(stories) {
  var composed = composeStories(stories);
  Object.entries(composed).forEach(function (_ref) {
    var _Story$parameters, _Story$parameters$sna;

    var _ref2 = _slicedToArray(_ref, 2),
        storyName = _ref2[0],
        Story = _ref2[1];

    if ((_Story$parameters = Story.parameters) !== null && _Story$parameters !== void 0 && (_Story$parameters$sna = _Story$parameters.snapshot) !== null && _Story$parameters$sna !== void 0 && _Story$parameters$sna.skip) return;
    test("".concat(storyName, " story renders snapshot"), /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              expect(prepareSnapshot( /*#__PURE__*/React.createElement(Story, null))).toMatchSnapshot();

            case 1:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    })));
  });
}
export var HintProvider = function HintProvider(_ref4) {
  var children = _ref4.children,
      context = _objectWithoutProperties(_ref4, _excluded);

  return /*#__PURE__*/React.createElement(TypeaheadContext.Provider, {
    value: _objectSpread(_objectSpread({}, defaultContext), context)
  }, children);
};
/**
 * Finding elements
 */

export function getHint(container) {
  return container.getElementsByClassName('rbt-input-hint')[0];
}
export function findInput() {
  return _findInput.apply(this, arguments);
}

function _findInput() {
  _findInput = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
    var multiple,
        role,
        _args2 = arguments;
    return _regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            multiple = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : false;
            role = multiple ? 'textbox' : 'combobox';
            return _context2.abrupt("return", screen.findByRole(role));

          case 3:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _findInput.apply(this, arguments);
}

export function getInput() {
  // Look for either the single- or multi-select case.
  return screen.queryByRole('combobox') || screen.queryByRole('textbox');
}
export function findItems() {
  return _findItems.apply(this, arguments);
}

function _findItems() {
  _findItems = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {
    return _regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            return _context3.abrupt("return", screen.findAllByRole('option'));

          case 1:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _findItems.apply(this, arguments);
}

export function getItems() {
  return screen.getAllByRole('option');
}
export function findMenu() {
  return _findMenu.apply(this, arguments);
}

function _findMenu() {
  _findMenu = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {
    return _regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            return _context4.abrupt("return", screen.findByRole('listbox'));

          case 1:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return _findMenu.apply(this, arguments);
}

export function getMenu() {
  return screen.queryByRole('listbox');
}
export function findPaginator() {
  return _findPaginator.apply(this, arguments);
}

function _findPaginator() {
  _findPaginator = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {
    var items;
    return _regeneratorRuntime.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _context5.next = 2;
            return findItems();

          case 2:
            items = _context5.sent;
            return _context5.abrupt("return", items[items.length - 1]);

          case 4:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));
  return _findPaginator.apply(this, arguments);
}

export function getTokens(container) {
  return container.getElementsByClassName('rbt-token');
}
export function waitForOverlay() {
  return _waitForOverlay.apply(this, arguments);
}

function _waitForOverlay() {
  _waitForOverlay = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {
    return _regeneratorRuntime.wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _context6.next = 2;
            return findMenu();

          case 2:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6);
  }));
  return _waitForOverlay.apply(this, arguments);
}