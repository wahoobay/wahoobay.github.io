import { isFunction, isString, noop, pick, uniqueId } from './nodash';
var arr = [];
var fn = noop;
var obj = {};
var str = 'foo';
describe('nodash', function () {
  test('isFunction', function () {
    expect(isFunction(fn)).toBe(true);
    [arr, obj, str, null, undefined, NaN].forEach(function (arg) {
      expect(isFunction(arg)).toBe(false);
    });
  });
  test('isString', function () {
    expect(isString(str)).toBe(true);
    [arr, obj, fn, null, undefined, NaN].forEach(function (arg) {
      expect(isString(arg)).toBe(false);
    });
  });
  test('pick', function () {
    var object = {
      bar: 'one',
      foo: 'two'
    };
    expect(pick(object, ['bar'])).toEqual({
      bar: 'one'
    });
    expect(pick(object, ['baz'])).toEqual({});
  });
  test('uniqueId', function () {
    expect(uniqueId()).toBe('1');
    expect(uniqueId('foo-')).toBe('foo-2');
  });
});