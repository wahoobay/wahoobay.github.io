import React, { useState } from 'react';
import { InputGroup } from 'react-bootstrap';
import Typeahead from './Typeahead';
import Menu from '../Menu';
import MenuItem from '../MenuItem';
import options from '../../tests/data';
import { noop } from '../../tests/helpers';
export default {
    title: 'Components/Typeahead',
    component: Typeahead,
    argTypes: {
        align: {
            options: ['justify', 'left', 'right'],
            control: { type: 'radio' },
        },
        disabled: {
            control: { type: 'boolean' },
        },
        size: {
            options: ['default', 'sm', 'lg'],
            control: { type: 'radio' },
        },
    },
    parameters: {
        actions: {
            argTypesRegex: '^on.*',
        },
    },
};
const defaultProps = {
    allowNew: false,
    clearButton: false,
    flip: true,
    id: 'rbt-id',
    isLoading: false,
    labelKey: 'name',
    multiple: false,
    onBlur: noop,
    onChange: noop,
    onFocus: noop,
    onInputChange: noop,
    onKeyDown: noop,
    options,
    placeholder: 'Choose a state...',
    positionFixed: true,
};
const Template = (args) => (React.createElement(Typeahead, { ...args }));
export const Default = Template.bind({});
Default.args = {
    ...defaultProps,
};
export const MultiSelect = Template.bind({});
MultiSelect.args = {
    ...defaultProps,
    defaultSelected: options.slice(0, 4),
    multiple: true,
};
export const ClearButton = Template.bind({});
ClearButton.args = {
    ...defaultProps,
    clearButton: true,
    defaultSelected: options.slice(0, 1),
};
export const LoadingState = Template.bind({});
LoadingState.args = {
    ...defaultProps,
    isLoading: true,
};
export const Pagination = Template.bind({});
Pagination.args = {
    ...defaultProps,
    maxResults: 10,
    paginate: true,
};
export const AllowNew = Template.bind({});
AllowNew.args = {
    ...defaultProps,
    allowNew: true,
};
export const CustomMenu = Template.bind({});
CustomMenu.args = {
    ...defaultProps,
    renderMenu: (results, menuProps) => (React.createElement(Menu, { ...menuProps, inputHeight: 0, scheduleUpdate: noop }, results
        .slice()
        .reverse()
        .map((r, index) => (React.createElement(MenuItem, { key: r.name, option: r, position: index }, r.name))))),
};
export const InputGrouping = (args) => (React.createElement(InputGroup, { size: args.size },
    React.createElement(InputGroup.Text, null, "$"),
    React.createElement(Typeahead, { ...args }),
    React.createElement(InputGroup.Text, null, ".00")));
InputGrouping.args = {
    ...defaultProps,
};
export const Controlled = (args) => {
    const [selected, setSelected] = useState(args.selected || []);
    return React.createElement(Typeahead, { ...args, onChange: setSelected, selected: selected });
};
Controlled.args = {
    ...defaultProps,
};
